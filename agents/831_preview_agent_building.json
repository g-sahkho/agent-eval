[
  {
    "useCaseId": "001",
    "agentName": "IT Incident Reporter",
    "toolSelection": [
      "ServiceNow: Create Incident",
      "Outlook: Send Email"
    ],
    "conversation": [
      {
        "request": "I want to build an agent that can create a ServiceNow ticket for me when I have an IT problem.",
        "response": "I can do that. I'll configure the agent to use the 'Create Incident' action in ServiceNow. After the incident is created, do you want the agent to perform any other steps?"
      },
      {
        "request": "Yes, it should also send a confirmation email to my manager using Outlook.",
        "response": "Okay. So, the workflow will be: when you describe an IT problem, the agent will create a ServiceNow incident and then send an email from your Outlook account. Is that the agent you want to build?"
      },
      {
        "request": "Yes, that's perfect.",
        "response": null
      }
    ],
    "agentInstructions": "The IT Incident Reporter agent streamlines your IT support process. When you describe an IT problem, the agent will: 1. Use `ServiceNow: Create Incident` to log a new ticket. 2. After the ticket is created, use `Outlook: Send Email` to send a confirmation to your manager. Ensure all details from your problem description are included in the ServiceNow ticket."
  },
  {
    "useCaseId": "002",
    "agentName": "Vacation Planner",
    "toolSelection": [
      "Workday: Request Time Off",
      "Google Calendar: Create Calendar Event"
    ],
    "conversation": [
      {
        "request": "Build an agent that helps me book my vacation time.",
        "response": "I can do that. To start, which application should the agent use to request the time off? I can connect to Workday."
      },
      {
        "request": "Yes, use Workday. After the request is made, can it also block off the time on my calendar?",
        "response": "Certainly. Which calendar service do you use, Google Calendar or Outlook?"
      },
      {
        "request": "Google Calendar.",
        "response": "Got it. So, the agent will take your dates, request time off in Workday, and then create an event on your Google Calendar. Is that correct?"
      },
      {
        "request": "Yes, that's the one.",
        "response": null
      }
    ],
    "agentInstructions": "The Vacation Planner agent helps you schedule time off. When you provide your desired vacation dates, the agent will: 1. Use `Workday: Request Time Off` to submit the official request. 2. Use `Google Calendar: Create Calendar Event` to block off those dates on your personal calendar. Ensure the dates in Workday and Google Calendar match exactly."
  },
  {
    "useCaseId": "003",
    "agentName": "Bug Submitter",
    "toolSelection": [
      "Jira: Search Jira Issues",
      "Jira: Create Jira Issue"
    ],
    "conversation": [
      {
        "request": "I need to build an agent to help me file bugs in Jira.",
        "response": "Understood. When you describe a bug, the agent can create a Jira issue. Would you like the agent to first search Jira to see if a similar bug has already been reported?"
      },
      {
        "request": "Yes, that's a great idea. It should search for duplicates first.",
        "response": "Okay. The agent's workflow will be: 1. Take your bug description. 2. Search Jira for duplicates. 3. If no duplicates are found, create a new Jira issue. Does this sound correct?"
      },
      {
        "request": "Yes, that's the logic I want.",
        "response": null
      }
    ],
    "agentInstructions": "The Bug Submitter agent helps you report bugs efficiently. When you describe a bug, the agent will: 1. Use `Jira: Search Jira Issues` to check if a similar bug has already been reported. 2. If no duplicates are found, use `Jira: Create Jira Issue` to create a new bug report. Include all relevant details from your description in the Jira ticket."
  },
  {
    "useCaseId": "004",
    "agentName": "Meeting Follow-up Assistant",
    "toolSelection": [
      "Confluence: Create Page",
      "Gmail: Send Email",
      "Jira: Create Jira Issue"
    ],
    "conversation": [
      {
        "request": "I want an agent that can send a follow-up email after a meeting, create a Confluence page with the notes, and create Jira tickets for any action items.",
        "response": "I can configure that. For the email, should the agent use Gmail or Outlook?"
      },
      {
        "request": "Let's use Gmail.",
        "response": "Okay. So when you provide meeting notes, the agent will send an email summary via Gmail, create a Confluence page for the minutes, and create new issues in Jira for any tasks you specify. Is that the workflow you'd like to build?"
      },
      {
        "request": "Yes, that covers it.",
        "response": null
      }
    ],
    "agentInstructions": "The Meeting Follow-up Assistant helps you stay organized after meetings. When you provide meeting notes, the agent will: 1. Use `Confluence: Create Page` to create a new page with the meeting minutes. 2. Use `Gmail: Send Email` to send a follow-up email to attendees. 3. Use `Jira: Create Jira Issue` to create tickets for any action items identified in the notes. Ensure the Confluence page, email, and Jira tickets are all consistent with the provided notes."
  },
  {
    "useCaseId": "005",
    "agentName": "PTO Notifier",
    "toolSelection": [
      "Workday: Request Time Off",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I need to build a simple agent: when I need to take a sick day, it should request it in Workday and email my team's distribution list.",
        "response": "I can build that for you. It will use the 'Request Time Off' action in Workday and the 'Send Email' action from Gmail. Is this correct?"
      },
      {
        "request": "Yes, that's all it needs to do.",
        "response": "Great. The agent is configured. When you need to use it, just tell it you're taking a sick day and provide the team's email address."
      }
    ],
    "agentInstructions": "The PTO Notifier agent simplifies taking time off. When you need to take a sick day, the agent will: 1. Use `Workday: Request Time Off` to submit the request. 2. Use `Gmail: Send Email` to notify your team's distribution list. Ensure the dates are correct and the email is sent to the specified address."
  },
  {
    "useCaseId": "006",
    "agentName": "Incident Escalator",
    "toolSelection": [
      "ServiceNow: Update Incident",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I need to build an agent for escalating critical IT incidents.",
        "response": "I can do that. I assume the agent should use the 'Update Incident' action in ServiceNow to change the priority?"
      },
      {
        "request": "Correct. After updating the ticket, it needs to email the on-call manager for awareness.",
        "response": "Understood. For the email, should it use Gmail or Outlook?"
      },
      {
        "request": "Gmail.",
        "response": "Okay, the agent is designed. When you provide a ServiceNow incident ID, it will update the incident's priority and then send a notification email via Gmail. Correct?"
      },
      {
        "request": "Yes, that's the workflow.",
        "response": null
      }
    ],
    "agentInstructions": "The Incident Escalator agent helps manage critical IT incidents. When you provide a ServiceNow incident ID, the agent will: 1. Use `ServiceNow: Update Incident` to change the incident's priority to critical. 2. Use `Gmail: Send Email` to email the on-call manager for immediate awareness. Ensure the correct incident ID is updated and the email is sent to the appropriate manager."
  },
  {
    "useCaseId": "007",
    "agentName": "Jira Task Updater",
    "toolSelection": [
      "Jira: Update Jira Issue"
    ],
    "conversation": [
      {
        "request": "I need a really simple agent that can just add comments to an existing Jira ticket for me.",
        "response": "No problem. I can build an agent that uses the 'Update Jira Issue' action. When you want to use it, you'll provide the Jira ticket ID and the comment you want to add. Is that what you're looking for?"
      },
      {
        "request": "Yes, that's it. Nothing more.",
        "response": "The agent has been configured with that single capability. It's ready when you are."
      }
    ],
    "agentInstructions": "The Jira Task Updater agent provides a simple way to update Jira tickets. When you provide a Jira ticket ID and a comment, the agent will use `Jira: Update Jira Issue` to add the comment to the existing ticket. Ensure the comment is added to the correct ticket ID."
  },
  {
    "useCaseId": "008",
    "agentName": "Outage Communicator",
    "toolSelection": [
      "ServiceNow: Create Incident",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "Let's build an agent for handling major outages. It needs to do two things: create a P0 incident in ServiceNow, and send a company-wide email.",
        "response": "Understood, that's an important workflow. For the email part, should I configure the agent to use Gmail or Outlook?"
      },
      {
        "request": "Use Gmail.",
        "response": "Okay. The agent is now set up. When you tell it about an outage, it will first create the ServiceNow incident and then send the email notification using Gmail. Correct?"
      },
      {
        "request": "Yes, that is the correct sequence.",
        "response": null
      }
    ],
    "agentInstructions": "The Outage Communicator agent handles major service disruptions. When you report an outage, the agent will: 1. Use `ServiceNow: Create Incident` to create a P0 incident. 2. Use `Gmail: Send Email` to send a company-wide notification about the outage. Ensure the incident is created with the highest priority and the email is sent to all employees."
  },
  {
    "useCaseId": "009",
    "agentName": "Team Event Coordinator",
    "toolSelection": [
      "Outlook: Create Calendar Event",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I want to build an agent to help schedule team meetings.",
        "response": "I can do that. Which calendar application should the agent use to create the event, Outlook or Google Calendar?"
      },
      {
        "request": "Use Outlook. And can you have it also send a separate email with the agenda?",
        "response": "Yes. And for that email, should the agent use Gmail or Outlook?"
      },
      {
        "request": "Use Gmail for the agenda email.",
        "response": "Okay, I've configured the agent. It will create a meeting invitation using Outlook and send a separate agenda summary email using Gmail. Is that right?"
      },
      {
        "request": "That's right.",
        "response": null
      }
    ],
    "agentInstructions": "The Team Event Coordinator agent helps you schedule team meetings. When you provide meeting details, the agent will: 1. Use `Outlook: Create Calendar Event` to create the meeting invitation. 2. Use `Gmail: Send Email` to send a separate email with the agenda. Ensure the meeting details are correct and the agenda is sent to all attendees."
  },
  {
    "useCaseId": "010",
    "agentName": "Project Kick-off Assistant",
    "toolSelection": [
      "Confluence: Create Page",
      "Jira: Create Jira Issue"
    ],
    "conversation": [
      {
        "request": "Build me an agent for kicking off a new project.",
        "response": "Okay. I can configure it to create a project overview page in Confluence. What else should it do?"
      },
      {
        "request": "After creating the page, it should create the main epic for the project in Jira.",
        "response": "Got it. The agent will first create a Confluence page from your input, then use that info to create a new epic in Jira. Does that sound correct?"
      },
      {
        "request": "Yes, that's the perfect workflow.",
        "response": null
      }
    ],
    "agentInstructions": "The Project Kick-off Assistant helps you start new projects. When you provide project details, the agent will: 1. Use `Confluence: Create Page` to create a project overview page. 2. Use `Jira: Create Jira Issue` to create the main epic for the project. Ensure the Confluence page and Jira epic are consistent with the project details."
  },
  {
    "useCaseId": "011",
    "agentName": "Weekly Status Reporter",
    "toolSelection": [
      "Jira: Search Jira Issues",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent that automates my weekly project status emails.",
        "response": "I can do that. The agent can search for Jira issues updated in the last week for your project. After that, what should it do?"
      },
      {
        "request": "It should take that list of issues and send it in an email summary using Gmail.",
        "response": "Understood. The agent will search Jira based on your criteria and then send the results in a formatted email via Gmail. Correct?"
      },
      {
        "request": "Perfect.",
        "response": null
      }
    ],
    "agentInstructions": "The Weekly Status Reporter agent automates your project status emails. When you specify a project, the agent will: 1. Use `Jira: Search Jira Issues` to find all issues updated in the last week. 2. Use `Gmail: Send Email` to send a summary of the issues to your stakeholders. Ensure the Jira search is filtered correctly and the email is sent to the right people."
  },
  {
    "useCaseId": "012",
    "agentName": "Retrospective Planner",
    "toolSelection": [
      "Confluence: Create Page",
      "Google Calendar: Create Calendar Event"
    ],
    "conversation": [
      {
        "request": "I want to build an agent that sets up our team's sprint retrospectives.",
        "response": "I can help with that. The agent can create the retro page in Confluence. Should it also schedule the meeting?"
      },
      {
        "request": "Yes. It should schedule the meeting on our team's Google Calendar.",
        "response": "Okay. So, the agent will create a new retro page in Confluence and then create a Google Calendar event to invite the team. Is that the full workflow?"
      },
      {
        "request": "Yes, that's exactly it.",
        "response": null
      }
    ],
    "agentInstructions": "The Retrospective Planner agent helps you organize sprint retrospectives. When you provide the sprint details, the agent will: 1. Use `Confluence: Create Page` to create a new retro page. 2. Use `Google Calendar: Create Calendar Event` to schedule the meeting and invite the team. Ensure the Confluence page is created and the calendar event is sent to all team members."
  },
  {
    "useCaseId": "013",
    "agentName": "Cross-Team Bug Notifier",
    "toolSelection": [
      "Jira: Create Jira Issue",
      "Outlook: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent that files a bug in Jira and notifies another team about it.",
        "response": "Certainly. The agent will be configured to use the 'Create Jira Issue' action. For the notification, should it use Outlook or Gmail?"
      },
      {
        "request": "Use Outlook.",
        "response": "Okay. So when you give the agent bug details, it will create a Jira issue and then send a notification email from your Outlook account. Is that right?"
      },
      {
        "request": "Yes, that's correct.",
        "response": null
      }
    ],
    "agentInstructions": "The Cross-Team Bug Notifier agent helps you report bugs and notify other teams. When you describe a bug, the agent will: 1. Use `Jira: Create Jira Issue` to create a new bug report. 2. Use `Outlook: Send Email` to notify another team about the new bug. Ensure the Jira ticket is created correctly and the email is sent to the specified team."
  },
  {
    "useCaseId": "014",
    "agentName": "Leave of Absence Coordinator",
    "toolSelection": [
      "Workday: Request Time Off",
      "Outlook: Create Calendar Event",
      "Outlook: Send Email"
    ],
    "conversation": [
      {
        "request": "Build an agent to handle everything for my extended leave.",
        "response": "I can do that. It can start by submitting the request in Workday. What should happen after that?"
      },
      {
        "request": "It needs to block my work calendar and send an out-of-office notification to the team.",
        "response": "Understood. For the calendar and email, do you use Outlook or Google?"
      },
      {
        "request": "Outlook for both.",
        "response": "Got it. The agent will: 1. Request time off in Workday. 2. Create an event in your Outlook calendar. 3. Send an email from Outlook. Correct?"
      },
      {
        "request": "Yes, thank you.",
        "response": null
      }
    ],
    "agentInstructions": "The Leave of Absence Coordinator agent handles all aspects of your extended leave. When you provide your leave dates, the agent will: 1. Use `Workday: Request Time Off` to submit the official request. 2. Use `Outlook: Create Calendar Event` to block off the time on your work calendar. 3. Use `Outlook: Send Email` to send an out-of-office notification to your team. Ensure all dates are correct and all actions are completed."
  },
  {
    "useCaseId": "015",
    "agentName": "Service Desk Automator",
    "toolSelection": [
      "ServiceNow: Create Incident",
      "Confluence: Create Page"
    ],
    "conversation": [
      {
        "request": "Let's build an agent for the service desk. When a new type of issue is reported, it should create a ticket.",
        "response": "Okay, the agent can use the 'Create Incident' action in ServiceNow. Should it do anything else?"
      },
      {
        "request": "Yes, it should also create a draft for a new knowledge base article in Confluence so we can document the solution later.",
        "response": "Great idea. So the agent will create a ServiceNow incident and simultaneously create a placeholder knowledge base article in Confluence. Is that correct?"
      },
      {
        "request": "Yes, that's the process.",
        "response": null
      }
    ],
    "agentInstructions": "The Service Desk Automator agent helps you manage new IT issues. When a new type of issue is reported, the agent will: 1. Use `ServiceNow: Create Incident` to create a new ticket. 2. Use `Confluence: Create Page` to create a draft for a new knowledge base article. Ensure the incident is created and the Confluence page is ready for documentation."
  },
  {
    "useCaseId": "016",
    "agentName": "Release Notes Drafter",
    "toolSelection": [
      "Jira: Search Jira Issues",
      "Confluence: Create Page"
    ],
    "conversation": [
      {
        "request": "I need to automate drafting release notes.",
        "response": "I can build an agent for that. I assume it should start by searching Jira for all the issues in the release?"
      },
      {
        "request": "Yes. Then it should take that list and create a new page in Confluence with it.",
        "response": "Perfect. The agent will search Jira for completed issues in a given version and then create a draft release notes page in Confluence with the results. Correct?"
      },
      {
        "request": "That's exactly what I need.",
        "response": null
      }
    ],
    "agentInstructions": "The Release Notes Drafter agent automates the creation of release notes. When you specify a release version, the agent will: 1. Use `Jira: Search Jira Issues` to find all completed issues in that version. 2. Use `Confluence: Create Page` to create a draft release notes page with the results. Ensure the Jira search is correct and the Confluence page is created with the list of issues."
  },
  {
    "useCaseId": "017",
    "agentName": "PTO Commenter",
    "toolSelection": [
      "Workday: Request Time Off",
      "Jira: Update Jira Issue"
    ],
    "conversation": [
      {
        "request": "Build an agent that requests my PTO in Workday.",
        "response": "Okay, the agent can use the 'Request Time Off' action in Workday. Do you need it to do anything else?"
      },
      {
        "request": "Yes. For every open Jira ticket assigned to me, it should add a comment that I will be out of office during those dates.",
        "response": "Interesting. So, the agent will first submit the request in Workday, and then it will add an OOO comment to all of your assigned Jira issues. Is that the desired workflow?"
      },
      {
        "request": "Yes, that will save me a lot of time.",
        "response": null
      }
    ],
    "agentInstructions": "The PTO Commenter agent helps you notify your team about your time off. When you request PTO, the agent will: 1. Use `Workday: Request Time Off` to submit the request. 2. Use `Jira: Update Jira Issue` to add a comment to all of your open Jira tickets, notifying your team that you will be out of office. Ensure the Workday request is submitted and all your Jira tickets are updated."
  },
  {
    "useCaseId": "018",
    "agentName": "On-Call Handoff Assistant",
    "toolSelection": [
      "Confluence: Create Page",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I need to build an agent that helps with my weekly on-call handoff.",
        "response": "I can do that. I can configure it to create a Confluence page with a summary of the week's events. What should happen after the page is created?"
      },
      {
        "request": "It should email a link to that page to the next on-call engineer using Gmail.",
        "response": "Understood. The agent will take your summary, create a Confluence page, and then email the link to the next person via Gmail. Correct?"
      },
      {
        "request": "Correct.",
        "response": null
      }
    ],
    "agentInstructions": "The On-Call Handoff Assistant helps you with your weekly on-call handoff. When you provide a summary of the week's events, the agent will: 1. Use `Confluence: Create Page` to create a handoff summary page. 2. Use `Gmail: Send Email` to email a link to the page to the next on-call engineer. Ensure the Confluence page is created and the email is sent to the correct person."
  },
  {
    "useCaseId": "019",
    "agentName": "ServiceNow Commenter",
    "toolSelection": [
      "ServiceNow: Update Incident"
    ],
    "conversation": [
      {
        "request": "I want a very simple agent to add updates to ServiceNow tickets for me.",
        "response": "I can build that. The agent will use the 'Update Incident' action in ServiceNow. You'll just need to provide the incident number and your comment. Is that all it should do?"
      },
      {
        "request": "Yes, that's it.",
        "response": "Okay, the agent is ready. It's configured with that single capability."
      }
    ],
    "agentInstructions": "The ServiceNow Commenter agent provides a simple way to update ServiceNow tickets. When you provide an incident number and a comment, the agent will use `ServiceNow: Update Incident` to add the comment to the existing ticket. Ensure the comment is added to the correct incident."
  },
  {
    "useCaseId": "020",
    "agentName": "Team Brainstorm Organizer",
    "toolSelection": [
      "Confluence: Create Page",
      "Outlook: Create Calendar Event"
    ],
    "conversation": [
      {
        "request": "Build me an agent to set up a brainstorming session for my team.",
        "response": "I can do that. It can create a new Confluence page for the session. Should it also schedule the meeting itself?"
      },
      {
        "request": "Yes, it should send an invite from Outlook.",
        "response": "Got it. The agent will create a Confluence page for your brainstorm and then create an Outlook calendar event for the team. Is this correct?"
      },
      {
        "request": "Yes, that's what I need.",
        "response": null
      }
    ],
    "agentInstructions": "The Team Brainstorm Organizer agent helps you set up brainstorming sessions. When you provide the session details, the agent will: 1. Use `Confluence: Create Page` to create a new page for the session. 2. Use `Outlook: Create Calendar Event` to schedule the meeting and invite the team. Ensure the Confluence page is created and the calendar event is sent to all team members."
  },
  {
    "useCaseId": "021",
    "agentName": "Scrum Blocker Reporter",
    "toolSelection": [
      "Jira: Create Jira Issue",
      "Google Calendar: Create Calendar Event"
    ],
    "conversation": [
      {
        "request": "I need an agent for when a team member reports a blocker in our daily stand-up.",
        "response": "Okay. The agent can immediately create a high-priority 'Blocker' issue in Jira. What else should it do?"
      },
      {
        "request": "It should also schedule a 15-minute follow-up meeting in Google Calendar with the people needed to solve it.",
        "response": "Understood. So, the agent will create a Blocker ticket in Jira and schedule an immediate follow-up meeting on Google Calendar. Is that the workflow?"
      },
      {
        "request": "Yes, that's perfect.",
        "response": null
      }
    ],
    "agentInstructions": "The Scrum Blocker Reporter agent helps you manage blockers in your daily stand-up. When a team member reports a blocker, the agent will: 1. Use `Jira: Create Jira Issue` to create a high-priority 'Blocker' issue. 2. Use `Google Calendar: Create Calendar Event` to schedule a 15-minute follow-up meeting with the people needed to solve it. Ensure the Jira ticket is created and the meeting is scheduled with the right people."
  },
  {
    "useCaseId": "022",
    "agentName": "Customer Complaint Logger",
    "toolSelection": [
      "Jira: Create Jira Issue",
      "Outlook: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent for logging customer complaints.",
        "response": "I can build that. I assume it should create an issue in Jira?"
      },
      {
        "request": "Yes, and after the Jira issue is created, it needs to send a confirmation email to the customer that we've received their complaint.",
        "response": "Okay. Should the email be sent using Outlook or Gmail?"
      },
      {
        "request": "Use Outlook.",
        "response": "The agent is configured. It will create a Jira issue from the complaint details and then send a confirmation email via Outlook. Correct?"
      },
      {
        "request": "Yes, that's right.",
        "response": null
      }
    ],
    "agentInstructions": "The Customer Complaint Logger agent helps you log customer complaints. When you receive a complaint, the agent will: 1. Use `Jira: Create Jira Issue` to create a new issue. 2. Use `Outlook: Send Email` to send a confirmation email to the customer. Ensure the Jira issue is created and the confirmation email is sent to the customer."
  },
  {
    "useCaseId": "023",
    "agentName": "Interview Scheduler",
    "toolSelection": [
      "Google Calendar: Create Calendar Event",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent to help schedule interviews with candidates.",
        "response": "I can help with that. I can set it up to create an event on Google Calendar with the candidate and interviewers. Should it do anything else?"
      },
      {
        "request": "Yes, after the event is created, it should send a confirmation email with the details using Gmail.",
        "response": "Okay. So the agent will first create the Google Calendar event, and then send a confirmation note via Gmail. Is that the correct order?"
      },
      {
        "request": "Yes, that's the process.",
        "response": null
      }
    ],
    "agentInstructions": "The Interview Scheduler agent helps you schedule interviews with candidates. When you provide the candidate and interviewer details, the agent will: 1. Use `Google Calendar: Create Calendar Event` to create an event with the candidate and interviewers. 2. Use `Gmail: Send Email` to send a confirmation email with the details. Ensure the calendar event is created and the confirmation email is sent to everyone."
  },
  {
    "useCaseId": "024",
    "agentName": "Knowledge Base Creator",
    "toolSelection": [
      "Jira: Update Jira Issue",
      "Confluence: Create Page"
    ],
    "conversation": [
      {
        "request": "I want an agent that helps us build out our knowledge base.",
        "response": "Okay, how should it be triggered?"
      },
      {
        "request": "When I mark a bug as 'Fixed' in Jira, I want the agent to help me create a new knowledge base article in Confluence explaining the fix.",
        "response": "That's a great workflow. So, the trigger is updating a Jira issue. The agent will then take the details from that issue and create a new Confluence page. Is that correct?"
      },
      {
        "request": "Yes, exactly.",
        "response": null
      }
    ],
    "agentInstructions": "The Knowledge Base Creator agent helps you build out your knowledge base. When you mark a bug as 'Fixed' in Jira, the agent will: 1. Use `Jira: Update Jira Issue` to confirm the fix. 2. Use `Confluence: Create Page` to create a new knowledge base article explaining the fix. Ensure the Jira issue is updated and the Confluence page is created with the correct information."
  },
  {
    "useCaseId": "025",
    "agentName": "Simple Emailer",
    "toolSelection": [
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I just need a basic agent that can send an email for me.",
        "response": "No problem. I can build an agent that uses the 'Send Email' action from Gmail. You would just provide the recipient, subject, and body. Is that what you need?"
      },
      {
        "request": "Yes, that's all. Nothing fancy.",
        "response": "The agent has been configured with that single capability. It's ready when you are."
      }
    ],
    "agentInstructions": "The Simple Emailer agent provides a basic way to send emails. When you provide the recipient, subject, and body, the agent will use `Gmail: Send Email` to send the email. Ensure the email is sent to the correct recipient with the correct content."
  },
  {
    "useCaseId": "026",
    "agentName": "IT Request Follow-up",
    "toolSelection": [
      "ServiceNow: Update Incident",
      "Outlook: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent that can post an update to a ServiceNow ticket and notify the person who filed it.",
        "response": "I can do that. It will use the 'Update Incident' action in ServiceNow. For the notification, should it use Outlook or Gmail?"
      },
      {
        "request": "Use Outlook.",
        "response": "Okay. So the agent will take your comment, add it to the specified ServiceNow incident, and then send an email via Outlook to the user. Is that the correct workflow?"
      },
      {
        "request": "Yes, that's it.",
        "response": null
      }
    ],
    "agentInstructions": "The IT Request Follow-up agent helps you update IT requests. When you provide an update, the agent will: 1. Use `ServiceNow: Update Incident` to add the update to the ticket. 2. Use `Outlook: Send Email` to notify the person who filed the request. Ensure the ServiceNow ticket is updated and the notification is sent to the correct person."
  },
  {
    "useCaseId": "027",
    "agentName": "Jira Triage Assistant",
    "toolSelection": [
      "Jira: Update Jira Issue",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "Build me an agent to help with Jira triage. It should update a ticket with a priority and component.",
        "response": "I can do that. The agent will use the 'Update Jira Issue' action. Should it do anything else after updating the ticket?"
      },
      {
        "request": "Yes, it should then email the component owner via Gmail to let them know a new high-priority item is in their queue.",
        "response": "Understood. The agent will update the Jira issue with the data you provide and then send a notification using Gmail. Is that right?"
      },
      {
        "request": "Perfect.",
        "response": null
      }
    ],
    "agentInstructions": "The Jira Triage Assistant helps you with Jira triage. When you provide a ticket and its priority and component, the agent will: 1. Use `Jira: Update Jira Issue` to update the ticket. 2. Use `Gmail: Send Email` to notify the component owner. Ensure the Jira ticket is updated and the notification is sent to the correct owner."
  },
  {
    "useCaseId": "028",
    "agentName": "Meeting Scheduler",
    "toolSelection": [
      "Google Calendar: Create Calendar Event"
    ],
    "conversation": [
      {
        "request": "I need an agent that just schedules meetings on my Google Calendar.",
        "response": "I can configure that for you. The agent will use the 'Create Calendar Event' action for Google Calendar. Is that the only action you need?"
      },
      {
        "request": "Yes, just a simple scheduler.",
        "response": "The agent is ready. Just tell it who to invite, the title, and the time."
      }
    ],
    "agentInstructions": "The Meeting Scheduler agent helps you schedule meetings. When you provide the meeting details, the agent will use `Google Calendar: Create Calendar Event` to schedule the meeting. Ensure the meeting is scheduled with the correct people and at the correct time."
  },
  {
    "useCaseId": "029",
    "agentName": "Project Update Communicator",
    "toolSelection": [
      "Confluence: Create Page",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent to help me send out project updates.",
        "response": "Okay. I can configure it to create a new page in Confluence with your update. What should it do after that?"
      },
      {
        "request": "It should send an email via Gmail to all the project stakeholders with a link to the new Confluence page.",
        "response": "Got it. The agent will create the Confluence page and then email a link to the stakeholders list you provide using Gmail. Correct?"
      },
      {
        "request": "Yes, that workflow is correct.",
        "response": null
      }
    ],
    "agentInstructions": "The Project Update Communicator agent helps you send out project updates. When you provide an update, the agent will: 1. Use `Confluence: Create Page` to create a new page with your update. 2. Use `Gmail: Send Email` to send a link to the page to all project stakeholders. Ensure the Confluence page is created and the email is sent to all stakeholders."
  },
  {
    "useCaseId": "030",
    "agentName": "Task Creator",
    "toolSelection": [
      "Jira: Create Jira Issue"
    ],
    "conversation": [
      {
        "request": "I want an agent that can quickly create a task for me in Jira.",
        "response": "I can build that. It will use the 'Create Jira Issue' action. You'll just provide the details of the task. Is that the only capability you need?"
      },
      {
        "request": "Yes, just a fast way to create tasks.",
        "response": "Okay, the agent is configured. It's ready to create Jira issues for you when you need it."
      }
    ],
    "agentInstructions": "The Task Creator agent helps you quickly create tasks in Jira. When you provide the task details, the agent will use `Jira: Create Jira Issue` to create a new task. Ensure the task is created with the correct details."
  },
  {
    "useCaseId": "031",
    "agentName": "IT Helpdesk Assistant",
    "toolSelection": [
      "ServiceNow: Create Incident",
      "Jira: Search Jira Issues"
    ],
    "conversation": [
      {
        "request": "I need an agent that creates a ServiceNow ticket and then checks Jira for related engineering tickets.",
        "response": "I can do that. The agent will first use 'Create Incident' in ServiceNow. Then, what kind of search should it perform in Jira?"
      },
      {
        "request": "It should search for any open Jira issues that contain the incident number.",
        "response": "Okay. So, the agent will create a ServiceNow incident, then search Jira for that incident number to find related bugs. Is that correct?"
      },
      {
        "request": "Yes, that's the workflow.",
        "response": null
      }
    ],
    "agentInstructions": "The IT Helpdesk Assistant agent helps you manage IT incidents and their related engineering tickets. When you report an issue, the agent will: 1. Use `ServiceNow: Create Incident` to log the issue. 2. Use `Jira: Search Jira Issues` to find any related engineering tickets by searching for the new incident number. Ensure the incident is created and the Jira search is performed correctly."
  },
  {
    "useCaseId": "032",
    "agentName": "Holiday Booker",
    "toolSelection": [
      "Workday: Request Time Off",
      "Outlook: Send Email"
    ],
    "conversation": [
      {
        "request": "Build an agent to book my holidays in Workday and notify my manager.",
        "response": "I can do that. It will use 'Request Time Off' in Workday. For the notification, should it use Outlook or Gmail?"
      },
      {
        "request": "Use Outlook.",
        "response": "Got it. The agent will request the time off in Workday and then send a notification email via Outlook. Is that correct?"
      },
      {
        "request": "Yes, that's what I need.",
        "response": null
      }
    ],
    "agentInstructions": "The Holiday Booker agent helps you book your holidays. When you provide your desired dates, the agent will: 1. Use `Workday: Request Time Off` to submit the request. 2. Use `Outlook: Send Email` to notify your manager. Ensure the dates are correct and the notification is sent."
  },
  {
    "useCaseId": "033",
    "agentName": "Feature Idea Logger",
    "toolSelection": [
      "Jira: Create Jira Issue",
      "Confluence: Create Page"
    ],
    "conversation": [
      {
        "request": "I want an agent to log new feature ideas. It should create a Jira issue and a Confluence page for the design.",
        "response": "I can build that. The agent will use 'Create Jira Issue' and 'Create Page' in Confluence. Is there a specific order they should be created in?"
      },
      {
        "request": "Create the Jira issue first, then the Confluence page.",
        "response": "Okay. The agent will first create the Jira issue for the feature idea, and then create a corresponding design page in Confluence. Is that correct?"
      },
      {
        "request": "Yes, that's the flow.",
        "response": null
      }
    ],
    "agentInstructions": "The Feature Idea Logger agent helps you log new feature ideas. When you describe a feature, the agent will: 1. Use `Jira: Create Jira Issue` to create a new feature request. 2. Use `Confluence: Create Page` to create a design page for the new feature. Ensure the Jira issue and Confluence page are created with the correct details."
  },
  {
    "useCaseId": "034",
    "agentName": "All-Hands Meeting Organizer",
    "toolSelection": [
      "Google Calendar: Create Calendar Event",
      "Gmail: Send Email",
      "Confluence: Create Page"
    ],
    "conversation": [
      {
        "request": "I need an agent to organize our monthly all-hands meeting.",
        "response": "I can do that. It can create the event in Google Calendar, send an announcement email via Gmail, and create a Confluence page for the agenda. Is that what you need?"
      },
      {
        "request": "Yes, that's the perfect combination.",
        "response": "Okay, the agent is configured. Just provide the meeting details when you're ready."
      }
    ],
    "agentInstructions": "The All-Hands Meeting Organizer agent helps you organize your monthly all-hands meetings. When you provide the meeting details, the agent will: 1. Use `Google Calendar: Create Calendar Event` to schedule the meeting. 2. Use `Gmail: Send Email` to send an announcement to the company. 3. Use `Confluence: Create Page` to create an agenda page. Ensure all details are correct and all actions are completed."
  },
  {
    "useCaseId": "035",
    "agentName": "Sick Leave Notifier",
    "toolSelection": [
      "Workday: Request Time Off",
      "Outlook: Create Calendar Event"
    ],
    "conversation": [
      {
        "request": "I need an agent that requests a sick day in Workday and blocks my Outlook calendar.",
        "response": "I can build that. It will use 'Request Time Off' in Workday and 'Create Calendar Event' in Outlook. Is that correct?"
      },
      {
        "request": "Yes, that's all it needs to do.",
        "response": "The agent is ready. Just tell it the dates when you need to use it."
      }
    ],
    "agentInstructions": "The Sick Leave Notifier agent helps you manage sick leave. When you need to take a sick day, the agent will: 1. Use `Workday: Request Time Off` to submit the request. 2. Use `Outlook: Create Calendar Event` to block off the time on your calendar. Ensure the dates are correct in both systems."
  },
  {
    "useCaseId": "036",
    "agentName": "Critical Incident Reporter",
    "toolSelection": [
      "ServiceNow: Create Incident",
      "Jira: Create Jira Issue"
    ],
    "conversation": [
      {
        "request": "I need an agent to report a critical incident in both ServiceNow and Jira.",
        "response": "I can do that. It will use 'Create Incident' in ServiceNow and 'Create Jira Issue' in Jira. Should they have the same title and description?"
      },
      {
        "request": "Yes, they should be identical.",
        "response": "Okay. The agent will create a new incident in ServiceNow and a new issue in Jira with the same details. Is that correct?"
      },
      {
        "request": "Yes, that's the workflow.",
        "response": null
      }
    ],
    "agentInstructions": "The Critical Incident Reporter agent helps you report critical incidents across systems. When you report an incident, the agent will: 1. Use `ServiceNow: Create Incident` to create a new incident. 2. Use `Jira: Create Jira Issue` to create a corresponding issue. Ensure the details are identical in both systems."
  },
  {
    "useCaseId": "037",
    "agentName": "Jira Issue Assigner",
    "toolSelection": [
      "Jira: Update Jira Issue",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent that can assign a Jira ticket to someone and notify them.",
        "response": "I can build that. It will use 'Update Jira Issue' to set the assignee. For the notification, should it use Gmail or Outlook?"
      },
      {
        "request": "Use Gmail.",
        "response": "Got it. The agent will update the Jira issue with the new assignee and then send a notification email via Gmail. Is that correct?"
      },
      {
        "request": "Yes, that's what I need.",
        "response": null
      }
    ],
    "agentInstructions": "The Jira Issue Assigner agent helps you assign Jira tickets. When you provide a ticket ID and an assignee, the agent will: 1. Use `Jira: Update Jira Issue` to assign the ticket. 2. Use `Gmail: Send Email` to notify the new assignee. Ensure the ticket is assigned correctly and the notification is sent."
  },
  {
    "useCaseId": "038",
    "agentName": "System Maintenance Announcer",
    "toolSelection": [
      "Outlook: Send Email",
      "Confluence: Create Page"
    ],
    "conversation": [
      {
        "request": "I need an agent to announce system maintenance. It should send an email and create a Confluence page with the details.",
        "response": "I can do that. It will use 'Send Email' from Outlook and 'Create Page' in Confluence. Is there a specific order?"
      },
      {
        "request": "Create the Confluence page first, then send the email with a link to the page.",
        "response": "Okay. The agent will first create the Confluence page, and then send an announcement email via Outlook with the link. Is that correct?"
      },
      {
        "request": "Yes, that's the process.",
        "response": null
      }
    ],
    "agentInstructions": "The System Maintenance Announcer agent helps you announce system maintenance. When you provide the maintenance details, the agent will: 1. Use `Confluence: Create Page` to create a page with the details. 2. Use `Outlook: Send Email` to announce the maintenance and provide a link to the Confluence page. Ensure the page is created and the email is sent to the correct audience."
  },
  {
    "useCaseId": "039",
    "agentName": "Client Meeting Scheduler",
    "toolSelection": [
      "Outlook: Create Calendar Event",
      "Jira: Update Jira Issue"
    ],
    "conversation": [
      {
        "request": "I need an agent to schedule a client meeting and log it in Jira.",
        "response": "I can build that. It will use 'Create Calendar Event' in Outlook. How should it log the meeting in Jira?"
      },
      {
        "request": "It should add a comment to the client's main Jira ticket with the meeting details.",
        "response": "Got it. The agent will create the Outlook calendar event and then add a comment to the specified Jira ticket. Is that correct?"
      },
      {
        "request": "Yes, that's the workflow.",
        "response": null
      }
    ],
    "agentInstructions": "The Client Meeting Scheduler agent helps you schedule and log client meetings. When you provide the meeting details, the agent will: 1. Use `Outlook: Create Calendar Event` to schedule the meeting. 2. Use `Jira: Update Jira Issue` to add a comment with the meeting details to the client's Jira ticket. Ensure the meeting is scheduled and the Jira ticket is updated."
  },
  {
    "useCaseId": "040",
    "agentName": "Design Review Organizer",
    "toolSelection": [
      "Confluence: Create Page",
      "Google Calendar: Create Calendar Event",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent to organize a design review. It should create a Confluence page, schedule a meeting, and send a reminder.",
        "response": "I can do that. It will use 'Create Page' in Confluence, 'Create Calendar Event' in Google Calendar, and 'Send Email' from Gmail for the reminder. Is that correct?"
      },
      {
        "request": "Yes, that's the complete workflow.",
        "response": "The agent is configured. Just provide the design details when you're ready."
      }
    ],
    "agentInstructions": "The Design Review Organizer agent helps you organize design reviews. When you provide the design details, the agent will: 1. Use `Confluence: Create Page` to create a page with the design. 2. Use `Google Calendar: Create Calendar Event` to schedule the review meeting. 3. Use `Gmail: Send Email` to send a reminder to the attendees. Ensure all details are correct and all actions are completed."
  },
  {
    "useCaseId": "041",
    "agentName": "Weekly Digest Creator",
    "toolSelection": [
      "Jira: Search Jira Issues",
      "Confluence: Create Page"
    ],
    "conversation": [
      {
        "request": "I need an agent to create a weekly digest of all completed Jira tickets and post it to Confluence.",
        "response": "I can build that. It will use 'Search Jira Issues' to find all tickets completed in the last 7 days, and then 'Create Page' in Confluence to post the digest. Is that correct?"
      },
      {
        "request": "Yes, that's exactly what I need.",
        "response": "The agent is ready. You can trigger it weekly to create the digest."
      }
    ],
    "agentInstructions": "The Weekly Digest Creator agent helps you create a weekly digest of completed work. The agent will: 1. Use `Jira: Search Jira Issues` to find all tickets completed in the last week. 2. Use `Confluence: Create Page` to create a digest page with the list of completed tickets. Ensure the Jira search is configured correctly for your project."
  },
  {
    "useCaseId": "042",
    "agentName": "Sprint Planning Assistant",
    "toolSelection": [
      "Jira: Search Jira Issues",
      "Google Calendar: Create Calendar Event"
    ],
    "conversation": [
      {
        "request": "I need an agent for sprint planning. It should find all unassigned stories and schedule a planning meeting.",
        "response": "I can do that. It will use 'Search Jira Issues' to find unassigned stories. For the meeting, should it use Google Calendar or Outlook?"
      },
      {
        "request": "Use Google Calendar.",
        "response": "Okay. The agent will find all unassigned Jira stories and then create a sprint planning meeting in Google Calendar. Is that correct?"
      },
      {
        "request": "Yes, that's the workflow.",
        "response": null
      }
    ],
    "agentInstructions": "The Sprint Planning Assistant agent helps you with sprint planning. The agent will: 1. Use `Jira: Search Jira Issues` to find all unassigned stories. 2. Use `Google Calendar: Create Calendar Event` to schedule a planning meeting to discuss the stories. Ensure the Jira search is configured correctly for your backlog."
  },
  {
    "useCaseId": "043",
    "agentName": "Security Incident Responder",
    "toolSelection": [
      "ServiceNow: Create Incident",
      "Outlook: Send Email",
      "Jira: Create Jira Issue"
    ],
    "conversation": [
      {
        "request": "I need an agent to handle security incidents. It should create a ServiceNow ticket, a Jira ticket, and email the security team.",
        "response": "I can build that. It will use 'Create Incident' in ServiceNow, 'Create Jira Issue', and 'Send Email' from Outlook. Is that correct?"
      },
      {
        "request": "Yes, that's the full process.",
        "response": "The agent is configured. Just provide the incident details when needed."
      }
    ],
    "agentInstructions": "The Security Incident Responder agent helps you handle security incidents. When you report a security incident, the agent will: 1. Use `ServiceNow: Create Incident` to log the incident. 2. Use `Jira: Create Jira Issue` to create a task for the engineering team. 3. Use `Outlook: Send Email` to notify the security team. Ensure all details are consistent across all systems."
  },
  {
    "useCaseId": "044",
    "agentName": "Time Off Logger",
    "toolSelection": [
      "Workday: Request Time Off",
      "Jira: Update Jira Issue"
    ],
    "conversation": [
      {
        "request": "I need an agent to request time off in Workday and log the time against a Jira ticket.",
        "response": "I can do that. It will use 'Request Time Off' in Workday. How should it log the time in Jira?"
      },
      {
        "request": "It should add a comment to a specific 'Time Off' Jira ticket with the dates.",
        "response": "Got it. The agent will request the time off in Workday and then add a comment to your 'Time Off' Jira ticket. Is that correct?"
      },
      {
        "request": "Yes, that's the workflow.",
        "response": null
      }
    ],
    "agentInstructions": "The Time Off Logger agent helps you log your time off. When you request time off, the agent will: 1. Use `Workday: Request Time Off` to submit the request. 2. Use `Jira: Update Jira Issue` to add a comment to your 'Time Off' ticket with the dates. Ensure the Workday request is submitted and the Jira ticket is updated."
  },
  {
    "useCaseId": "045",
    "agentName": "Service Restoration Notifier",
    "toolSelection": [
      "ServiceNow: Update Incident",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent to announce that a service has been restored. It should update the ServiceNow ticket and send an email.",
        "response": "I can build that. It will use 'Update Incident' in ServiceNow to close the ticket. For the email, should it use Gmail or Outlook?"
      },
      {
        "request": "Use Gmail.",
        "response": "Okay. The agent will update the ServiceNow incident to 'Resolved' and then send a service restoration email via Gmail. Is that correct?"
      },
      {
        "request": "Yes, that's the process.",
        "response": null
      }
    ],
    "agentInstructions": "The Service Restoration Notifier agent helps you announce service restorations. When a service is restored, the agent will: 1. Use `ServiceNow: Update Incident` to resolve the corresponding incident ticket. 2. Use `Gmail: Send Email` to announce that the service is back online. Ensure the correct incident is resolved and the announcement is sent to the right audience."
  },
  {
    "useCaseId": "046",
    "agentName": "Confluence Page Updater",
    "toolSelection": [
      "Confluence: Create Page"
    ],
    "conversation": [
      {
        "request": "I need a simple agent that can just create or update a Confluence page for me.",
        "response": "I can build that. The agent will use the 'Create Page' action in Confluence. If the page already exists, it will update it. Is that what you're looking for?"
      },
      {
        "request": "Yes, that's it.",
        "response": "The agent is ready. Just provide the page title and content."
      }
    ],
    "agentInstructions": "The Confluence Page Updater agent provides a simple way to create or update Confluence pages. When you provide a page title and content, the agent will use `Confluence: Create Page` to create or update the page. If the page exists, it will be updated; otherwise, it will be created."
  },
  {
    "useCaseId": "047",
    "agentName": "Team Lunch Organizer",
    "toolSelection": [
      "Outlook: Create Calendar Event",
      "Outlook: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent to organize a team lunch. It should schedule it in Outlook and send an email with a poll for food choices.",
        "response": "I can do that. It will use 'Create Calendar Event' in Outlook for the schedule. For the email with the poll, should it also use Outlook?"
      },
      {
        "request": "Yes, use Outlook for both.",
        "response": "Got it. The agent will create the calendar event and send a separate email with the poll, both from Outlook. Is that correct?"
      },
      {
        "request": "Yes, that's the plan.",
        "response": null
      }
    ],
    "agentInstructions": "The Team Lunch Organizer agent helps you organize team lunches. When you provide the details, the agent will: 1. Use `Outlook: Create Calendar Event` to schedule the lunch. 2. Use `Outlook: Send Email` to send an email with a poll for food choices. Ensure the event is scheduled and the poll is sent to the team."
  },
  {
    "useCaseId": "048",
    "agentName": "Bug Verification Assistant",
    "toolSelection": [
      "Jira: Update Jira Issue",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent to help with bug verification. It should update the Jira ticket to 'Ready for QA' and notify the QA team.",
        "response": "I can build that. It will use 'Update Jira Issue' to change the status. For the notification, should it use Gmail or Outlook?"
      },
      {
        "request": "Use Gmail.",
        "response": "Okay. The agent will update the Jira ticket's status and then send a notification email to the QA team via Gmail. Is that correct?"
      },
      {
        "request": "Yes, that's the workflow.",
        "response": null
      }
    ],
    "agentInstructions": "The Bug Verification Assistant agent helps you with bug verification. When a bug is ready for QA, the agent will: 1. Use `Jira: Update Jira Issue` to change the ticket's status to 'Ready for QA'. 2. Use `Gmail: Send Email` to notify the QA team. Ensure the correct ticket is updated and the notification is sent to the QA distribution list."
  },
  {
    "useCaseId": "049",
    "agentName": "Simple Calendar Booker",
    "toolSelection": [
      "Outlook: Create Calendar Event"
    ],
    "conversation": [
      {
        "request": "I need a very simple agent that just books an event on my Outlook calendar.",
        "response": "I can build that. It will use the 'Create Calendar Event' action in Outlook. Is that all you need?"
      },
      {
        "request": "Yes, that's it.",
        "response": "The agent is ready. Just provide the event details when you want to use it."
      }
    ],
    "agentInstructions": "The Simple Calendar Booker agent provides a simple way to book events on your Outlook calendar. When you provide the event details, the agent will use `Outlook: Create Calendar Event` to create the event. Ensure the details are correct."
  },
  {
    "useCaseId": "050",
    "agentName": "Project Documentation Creator",
    "toolSelection": [
      "Confluence: Create Page",
      "Jira: Search Jira Issues"
    ],
    "conversation": [
      {
        "request": "I need an agent to create project documentation. It should create a Confluence page and link to all the epics in the project.",
        "response": "I can do that. It will use 'Create Page' in Confluence. For the epics, it will use 'Search Jira Issues' to find all epics for a given project. Is that correct?"
      },
      {
        "request": "Yes, that's the workflow.",
        "response": "The agent is configured. Just provide the project name and it will create the documentation page."
      }
    ],
    "agentInstructions": "The Project Documentation Creator agent helps you create project documentation. When you provide a project name, the agent will: 1. Use `Jira: Search Jira Issues` to find all epics for that project. 2. Use `Confluence: Create Page` to create a documentation page that lists and links to all the project epics. Ensure the project name is correct."
  },
  {
    "useCaseId": "051",
    "agentName": "IT Ticket Assigner",
    "toolSelection": [
      "ServiceNow: Update Incident",
      "Outlook: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent to assign a ServiceNow ticket and notify the assignee.",
        "response": "I can build that. It will use 'Update Incident' in ServiceNow to set the assignee. For the notification, should it use Outlook or Gmail?"
      },
      {
        "request": "Use Outlook.",
        "response": "Got it. The agent will update the ServiceNow ticket with the new assignee and then send a notification email via Outlook. Is that correct?"
      },
      {
        "request": "Yes, that's what I need.",
        "response": null
      }
    ],
    "agentInstructions": "The IT Ticket Assigner agent helps you assign ServiceNow tickets. When you provide a ticket ID and an assignee, the agent will: 1. Use `ServiceNow: Update Incident` to assign the ticket. 2. Use `Outlook: Send Email` to notify the new assignee. Ensure the ticket is assigned correctly and the notification is sent."
  },
  {
    "useCaseId": "052",
    "agentName": "Personal Time Off Booker",
    "toolSelection": [
      "Workday: Request Time Off"
    ],
    "conversation": [
      {
        "request": "I need a very simple agent to book my personal time off in Workday.",
        "response": "I can build that. It will use the 'Request Time Off' action in Workday. Is that all you need?"
      },
      {
        "request": "Yes, that's it.",
        "response": "The agent is ready. Just provide the dates when you want to use it."
      }
    ],
    "agentInstructions": "The Personal Time Off Booker agent provides a simple way to book your personal time off. When you provide the dates, the agent will use `Workday: Request Time Off` to submit the request. Ensure the dates are correct."
  },
  {
    "useCaseId": "053",
    "agentName": "Epic Progress Reporter",
    "toolSelection": [
      "Jira: Search Jira Issues",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent to report the progress of a Jira epic. It should find all the stories in the epic and email a summary.",
        "response": "I can do that. It will use 'Search Jira Issues' to find all stories linked to the epic. For the summary email, should it use Gmail or Outlook?"
      },
      {
        "request": "Use Gmail.",
        "response": "Okay. The agent will find all the stories in the epic and then send a progress summary email via Gmail. Is that correct?"
      },
      {
        "request": "Yes, that's the workflow.",
        "response": null
      }
    ],
    "agentInstructions": "The Epic Progress Reporter agent helps you report the progress of a Jira epic. When you provide an epic ID, the agent will: 1. Use `Jira: Search Jira Issues` to find all stories linked to the epic. 2. Use `Gmail: Send Email` to send a progress summary to stakeholders. Ensure the epic ID is correct."
  },
  {
    "useCaseId": "054",
    "agentName": "Workshop Facilitator",
    "toolSelection": [
      "Google Calendar: Create Calendar Event",
      "Confluence: Create Page",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent to facilitate a workshop. It should schedule the workshop, create a Confluence page for exercises, and send a prep email.",
        "response": "I can build that. It will use 'Create Calendar Event' in Google Calendar, 'Create Page' in Confluence, and 'Send Email' from Gmail. Is that correct?"
      },
      {
        "request": "Yes, that's the complete process.",
        "response": "The agent is configured. Just provide the workshop details when you're ready."
      }
    ],
    "agentInstructions": "The Workshop Facilitator agent helps you facilitate workshops. When you provide the workshop details, the agent will: 1. Use `Google Calendar: Create Calendar Event` to schedule the workshop. 2. Use `Confluence: Create Page` to create a page for workshop exercises. 3. Use `Gmail: Send Email` to send a preparation email to attendees. Ensure all details are correct and all actions are completed."
  },
  {
    "useCaseId": "055",
    "agentName": "Parental Leave Planner",
    "toolSelection": [
      "Workday: Request Time Off",
      "Outlook: Send Email",
      "Outlook: Create Calendar Event"
    ],
    "conversation": [
      {
        "request": "I need an agent to plan my parental leave. It should request the leave in Workday, notify my team, and block my calendar.",
        "response": "I can do that. It will use 'Request Time Off' in Workday. For the notification and calendar, should it use Outlook or Google?"
      },
      {
        "request": "Use Outlook for both.",
        "response": "Got it. The agent will request the leave in Workday, send a notification email via Outlook, and create a calendar event in Outlook. Is that correct?"
      },
      {
        "request": "Yes, that's the full plan.",
        "response": null
      }
    ],
    "agentInstructions": "The Parental Leave Planner agent helps you plan your parental leave. When you provide your leave dates, the agent will: 1. Use `Workday: Request Time Off` to submit the request. 2. Use `Outlook: Send Email` to notify your team. 3. Use `Outlook: Create Calendar Event` to block off your calendar. Ensure the dates are correct and all actions are completed."
  },
  {
    "useCaseId": "056",
    "agentName": "System Outage Reporter",
    "toolSelection": [
      "ServiceNow: Create Incident",
      "Confluence: Create Page"
    ],
    "conversation": [
      {
        "request": "I need an agent to report a system outage. It should create a ServiceNow ticket and a Confluence page for live updates.",
        "response": "I can build that. It will use 'Create Incident' in ServiceNow and 'Create Page' in Confluence. Is that correct?"
      },
      {
        "request": "Yes, that's the process.",
        "response": "The agent is ready. Just provide the outage details when it happens."
      }
    ],
    "agentInstructions": "The System Outage Reporter agent helps you report system outages. When you report an outage, the agent will: 1. Use `ServiceNow: Create Incident` to log the outage. 2. Use `Confluence: Create Page` to create a page for live updates. Ensure the incident is created and the Confluence page is ready for updates."
  },
  {
    "useCaseId": "057",
    "agentName": "Jira Sub-task Creator",
    "toolSelection": [
      "Jira: Create Jira Issue"
    ],
    "conversation": [
      {
        "request": "I need a simple agent to create a sub-task for a Jira story.",
        "response": "I can build that. It will use the 'Create Jira Issue' action and set the parent issue. Is that what you need?"
      },
      {
        "request": "Yes, that's it.",
        "response": "The agent is ready. Just provide the parent story ID and the sub-task details."
      }
    ],
    "agentInstructions": "The Jira Sub-task Creator agent provides a simple way to create Jira sub-tasks. When you provide a parent story ID and sub-task details, the agent will use `Jira: Create Jira Issue` to create the sub-task and link it to the parent. Ensure the parent ID is correct."
  },
  {
    "useCaseId": "058",
    "agentName": "Product Launch Announcer",
    "toolSelection": [
      "Gmail: Send Email",
      "Confluence: Create Page"
    ],
    "conversation": [
      {
        "request": "I need an agent to announce a product launch. It should send a company-wide email and create a Confluence page with the launch details.",
        "response": "I can do that. It will use 'Send Email' from Gmail and 'Create Page' in Confluence. Which should happen first?"
      },
      {
        "request": "Create the Confluence page first, then send the email with a link to it.",
        "response": "Okay. The agent will create the Confluence page and then send the announcement email via Gmail with the link. Is that correct?"
      },
      {
        "request": "Yes, that's the plan.",
        "response": null
      }
    ],
    "agentInstructions": "The Product Launch Announcer agent helps you announce product launches. When you provide the launch details, the agent will: 1. Use `Confluence: Create Page` to create a page with the launch details. 2. Use `Gmail: Send Email` to announce the launch to the company with a link to the page. Ensure the page is created and the email is sent to the correct audience."
  },
  {
    "useCaseId": "059",
    "agentName": "Sales Demo Scheduler",
    "toolSelection": [
      "Google Calendar: Create Calendar Event",
      "Jira: Update Jira Issue"
    ],
    "conversation": [
      {
        "request": "I need an agent to schedule a sales demo and log it in the client's Jira ticket.",
        "response": "I can build that. It will use 'Create Calendar Event' in Google Calendar. How should it log the demo in Jira?"
      },
      {
        "request": "It should add a comment to the client's opportunity ticket with the demo details.",
        "response": "Got it. The agent will create the Google Calendar event and then add a comment to the specified Jira ticket. Is that correct?"
      },
      {
        "request": "Yes, that's the workflow.",
        "response": null
      }
    ],
    "agentInstructions": "The Sales Demo Scheduler agent helps you schedule and log sales demos. When you provide the demo details, the agent will: 1. Use `Google Calendar: Create Calendar Event` to schedule the demo. 2. Use `Jira: Update Jira Issue` to add a comment with the demo details to the client's opportunity ticket. Ensure the demo is scheduled and the Jira ticket is updated."
  },
  {
    "useCaseId": "060",
    "agentName": "Training Session Organizer",
    "toolSelection": [
      "Outlook: Create Calendar Event",
      "Confluence: Create Page",
      "Outlook: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent to organize a training session. It should schedule the session, create a Confluence page for materials, and send a confirmation email.",
        "response": "I can do that. It will use 'Create Calendar Event' in Outlook, 'Create Page' in Confluence, and 'Send Email' from Outlook. Is that correct?"
      },
      {
        "request": "Yes, that's the full process.",
        "response": "The agent is configured. Just provide the training details when you're ready."
      }
    ],
    "agentInstructions": "The Training Session Organizer agent helps you organize training sessions. When you provide the training details, the agent will: 1. Use `Outlook: Create Calendar Event` to schedule the session. 2. Use `Confluence: Create Page` to create a page for training materials. 3. Use `Outlook: Send Email` to send a confirmation email to attendees. Ensure all details are correct and all actions are completed."
  },
  {
    "useCaseId": "061",
    "agentName": "Release Blocker Reporter",
    "toolSelection": [
      "Jira: Create Jira Issue",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent to report a release blocker. It should create a critical Jira issue and email the release manager.",
        "response": "I can build that. It will use 'Create Jira Issue' to create a blocker ticket. For the email, should it use Gmail or Outlook?"
      },
      {
        "request": "Use Gmail.",
        "response": "Okay. The agent will create the Jira blocker and then send a notification email to the release manager via Gmail. Is that correct?"
      },
      {
        "request": "Yes, that's the workflow.",
        "response": null
      }
    ],
    "agentInstructions": "The Release Blocker Reporter agent helps you report release blockers. When you report a blocker, the agent will: 1. Use `Jira: Create Jira Issue` to create a critical blocker issue. 2. Use `Gmail: Send Email` to notify the release manager. Ensure the Jira issue is created with the highest priority and the email is sent immediately."
  },
  {
    "useCaseId": "062",
    "agentName": "Team Offsite Planner",
    "toolSelection": [
      "Google Calendar: Create Calendar Event",
      "Confluence: Create Page"
    ],
    "conversation": [
      {
        "request": "I need an agent to plan our team offsite. It should block the dates on our Google Calendar and create a Confluence page for ideas.",
        "response": "I can do that. It will use 'Create Calendar Event' on Google Calendar and 'Create Page' in Confluence. Is that correct?"
      },
      {
        "request": "Yes, that's what I need.",
        "response": "The agent is ready. Just provide the dates and some initial ideas."
      }
    ],
    "agentInstructions": "The Team Offsite Planner agent helps you plan your team offsite. When you provide the dates and details, the agent will: 1. Use `Google Calendar: Create Calendar Event` to block the dates on the team calendar. 2. Use `Confluence: Create Page` to create a page for offsite ideas and planning. Ensure the dates are correct and the Confluence page is created."
  },
  {
    "useCaseId": "063",
    "agentName": "Customer Feedback Logger",
    "toolSelection": [
      "Jira: Create Jira Issue",
      "Confluence: Create Page"
    ],
    "conversation": [
      {
        "request": "I need an agent to log customer feedback. It should create a Jira issue and a Confluence page to track the feedback.",
        "response": "I can build that. It will use 'Create Jira Issue' and 'Create Page' in Confluence. Should the Confluence page link to the Jira issue?"
      },
      {
        "request": "Yes, please include a link.",
        "response": "Okay. The agent will create a Jira issue for the feedback and a Confluence page that links to the issue. Is that correct?"
      },
      {
        "request": "Yes, that's the process.",
        "response": null
      }
    ],
    "agentInstructions": "The Customer Feedback Logger agent helps you log customer feedback. When you receive feedback, the agent will: 1. Use `Jira: Create Jira Issue` to create a new issue. 2. Use `Confluence: Create Page` to create a page to track the feedback, including a link to the Jira issue. Ensure the issue and page are created with the correct details."
  },
  {
    "useCaseId": "064",
    "agentName": "Simple Outlook Emailer",
    "toolSelection": [
      "Outlook: Send Email"
    ],
    "conversation": [
      {
        "request": "I need a basic agent that can send an email for me using Outlook.",
        "response": "I can build that. It will use the 'Send Email' action from Outlook. You would just provide the recipient, subject, and body. Is that what you need?"
      },
      {
        "request": "Yes, that's all.",
        "response": "The agent is configured. It's ready when you are."
      }
    ],
    "agentInstructions": "The Simple Outlook Emailer agent provides a basic way to send emails using Outlook. When you provide the recipient, subject, and body, the agent will use `Outlook: Send Email` to send the email. Ensure the email is sent to the correct recipient with the correct content."
  },
  {
    "useCaseId": "065",
    "agentName": "IT Service Request Creator",
    "toolSelection": [
      "ServiceNow: Create Incident"
    ],
    "conversation": [
      {
        "request": "I need a simple agent to create an IT service request in ServiceNow.",
        "response": "I can build that. It will use the 'Create Incident' action in ServiceNow, but we can label it as a service request. Is that what you need?"
      },
      {
        "request": "Yes, that's perfect.",
        "response": "The agent is ready. Just provide the details of your service request."
      }
    ],
    "agentInstructions": "The IT Service Request Creator agent provides a simple way to create IT service requests. When you provide the details of your request, the agent will use `ServiceNow: Create Incident` to create a new service request ticket. Ensure all details are included in the ticket."
  },
  {
    "useCaseId": "066",
    "agentName": "PTO Balance Checker",
    "toolSelection": [
      "Workday: Request Time Off",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I want an agent that can check my PTO balance in Workday and email it to me.",
        "response": "I can build that. It will use a Workday action to get your balance and then 'Send Email' from Gmail to send it to you. Is that correct?"
      },
      {
        "request": "Yes, that's what I need.",
        "response": "The agent is configured. You can ask it for your PTO balance anytime."
      }
    ],
    "agentInstructions": "The PTO Balance Checker agent helps you check your PTO balance. The agent will: 1. Use a `Workday` action to get your current PTO balance. 2. Use `Gmail: Send Email` to email the balance to you. Note: This is a conceptual example, assuming a 'Get Balance' action exists in Workday."
  },
  {
    "useCaseId": "067",
    "agentName": "Jira Epic Creator",
    "toolSelection": [
      "Jira: Create Jira Issue"
    ],
    "conversation": [
      {
        "request": "I need a simple agent to create a new epic in Jira.",
        "response": "I can build that. It will use the 'Create Jira Issue' action and set the issue type to 'Epic'. Is that what you need?"
      },
      {
        "request": "Yes, that's it.",
        "response": "The agent is ready. Just provide the epic name and summary."
      }
    ],
    "agentInstructions": "The Jira Epic Creator agent provides a simple way to create Jira epics. When you provide the epic details, the agent will use `Jira: Create Jira Issue` to create a new epic. Ensure the issue type is set to 'Epic'."
  },
  {
    "useCaseId": "068",
    "agentName": "Meeting Minutes Distributor",
    "toolSelection": [
      "Confluence: Create Page",
      "Outlook: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent to distribute meeting minutes. It should create a Confluence page and email a link to the attendees.",
        "response": "I can do that. It will use 'Create Page' in Confluence and 'Send Email' from Outlook. Is that correct?"
      },
      {
        "request": "Yes, that's the workflow.",
        "response": "The agent is ready. Just provide the minutes and the list of attendees."
      }
    ],
    "agentInstructions": "The Meeting Minutes Distributor agent helps you distribute meeting minutes. When you provide the minutes, the agent will: 1. Use `Confluence: Create Page` to create a page with the minutes. 2. Use `Outlook: Send Email` to send a link to the page to all attendees. Ensure the page is created and the email is sent to the correct people."
  },
  {
    "useCaseId": "069",
    "agentName": "Support Ticket Escalator",
    "toolSelection": [
      "ServiceNow: Update Incident",
      "Jira: Create Jira Issue"
    ],
    "conversation": [
      {
        "request": "I need an agent to escalate a support ticket from ServiceNow to Jira.",
        "response": "I can build that. It will take a ServiceNow incident ID, create a new Jira issue, and then update the ServiceNow ticket with the Jira issue ID. Is that the workflow?"
      },
      {
        "request": "Yes, that's exactly it.",
        "response": "The agent is configured. Just provide the ServiceNow incident ID to escalate it."
      }
    ],
    "agentInstructions": "The Support Ticket Escalator agent helps you escalate support tickets from ServiceNow to Jira. When you provide a ServiceNow incident ID, the agent will: 1. Use `Jira: Create Jira Issue` to create a new issue for the engineering team. 2. Use `ServiceNow: Update Incident` to add the new Jira issue ID to the ServiceNow ticket for tracking. Ensure the correct incident is updated."
  },
  {
    "useCaseId": "070",
    "agentName": "Candidate Rejection Notifier",
    "toolSelection": [
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent to send rejection emails to candidates.",
        "response": "I can build that. It will use the 'Send Email' action from Gmail. You would provide the candidate's email and name to personalize the template. Is that what you need?"
      },
      {
        "request": "Yes, that will be very helpful.",
        "response": "The agent is configured. Just provide the candidate's details to send the email."
      }
    ],
    "agentInstructions": "The Candidate Rejection Notifier agent helps you send rejection emails to candidates. When you provide the candidate's details, the agent will use `Gmail: Send Email` to send a polite rejection email. Ensure the correct template and details are used."
  },
  {
    "useCaseId": "071",
    "agentName": "Daily Standup Reminder",
    "toolSelection": [
      "Google Calendar: Create Calendar Event",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent to remind the team about our daily standup. It should check if the event is on the calendar and send a reminder email.",
        "response": "I can do that. It will use Google Calendar to find the standup event and then 'Send Email' from Gmail to send the reminder. Is that correct?"
      },
      {
        "request": "Yes, that's the workflow.",
        "response": "The agent is configured. You can trigger it daily before the standup."
      }
    ],
    "agentInstructions": "The Daily Standup Reminder agent helps you remind your team about the daily standup. The agent will: 1. Use `Google Calendar` to find today's standup event. 2. Use `Gmail: Send Email` to send a reminder to the team. Note: This is a conceptual example, assuming a 'Find Event' action exists in Google Calendar."
  },
  {
    "useCaseId": "072",
    "agentName": "Jira Bug Reporter",
    "toolSelection": [
      "Jira: Create Jira Issue"
    ],
    "conversation": [
      {
        "request": "I need a simple agent to report a bug in Jira.",
        "response": "I can build that. It will use the 'Create Jira Issue' action and set the issue type to 'Bug'. Is that what you need?"
      },
      {
        "request": "Yes, that's it.",
        "response": "The agent is ready. Just provide the bug details."
      }
    ],
    "agentInstructions": "The Jira Bug Reporter agent provides a simple way to report bugs in Jira. When you provide the bug details, the agent will use `Jira: Create Jira Issue` to create a new bug report. Ensure the issue type is set to 'Bug'."
  },
  {
    "useCaseId": "073",
    "agentName": "New Hire Onboarding Assistant",
    "toolSelection": [
      "Confluence: Create Page",
      "Jira: Create Jira Issue",
      "Outlook: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent to help with new hire onboarding. It should create a Confluence page with resources, a Jira ticket for their setup, and a welcome email.",
        "response": "I can build that. It will use 'Create Page' in Confluence, 'Create Jira Issue', and 'Send Email' from Outlook. Is that correct?"
      },
      {
        "request": "Yes, that's the complete onboarding process.",
        "response": "The agent is configured. Just provide the new hire's details to start the process."
      }
    ],
    "agentInstructions": "The New Hire Onboarding Assistant agent helps you with new hire onboarding. When a new hire joins, the agent will: 1. Use `Confluence: Create Page` to create a page with onboarding resources. 2. Use `Jira: Create Jira Issue` to create a ticket for their IT setup. 3. Use `Outlook: Send Email` to send a welcome email. Ensure all details are correct for the new hire."
  },
  {
    "useCaseId": "074",
    "agentName": "ServiceNow Status Checker",
    "toolSelection": [
      "ServiceNow: Update Incident",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I want an agent that can check the status of a ServiceNow ticket and email it to me.",
        "response": "I can build that. It will use a ServiceNow action to get the ticket status and then 'Send Email' from Gmail to send it to you. Is that correct?"
      },
      {
        "request": "Yes, that's what I need.",
        "response": "The agent is configured. You can ask it for the status of any ServiceNow ticket."
      }
    ],
    "agentInstructions": "The ServiceNow Status Checker agent helps you check the status of ServiceNow tickets. The agent will: 1. Use a `ServiceNow` action to get the status of a given incident ID. 2. Use `Gmail: Send Email` to email the status to you. Note: This is a conceptual example, assuming a 'Get Incident Status' action exists in ServiceNow."
  },
  {
    "useCaseId": "075",
    "agentName": "Bereavement Leave Booker",
    "toolSelection": [
      "Workday: Request Time Off",
      "Outlook: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent to book bereavement leave in Workday and notify HR.",
        "response": "I can build that. It will use 'Request Time Off' in Workday. For the notification to HR, should it use Outlook or Gmail?"
      },
      {
        "request": "Use Outlook.",
        "response": "Got it. The agent will request the leave in Workday and then send a notification email to HR via Outlook. Is that correct?"
      },
      {
        "request": "Yes, that's the process.",
        "response": null
      }
    ],
    "agentInstructions": "The Bereavement Leave Booker agent helps you book bereavement leave. When you provide the dates, the agent will: 1. Use `Workday: Request Time Off` to submit the request. 2. Use `Outlook: Send Email` to notify HR. Ensure the dates are correct and the notification is sent to the HR department."
  },
  {
    "useCaseId": "076",
    "agentName": "Jira Story Promoter",
    "toolSelection": [
      "Jira: Update Jira Issue",
      "Confluence: Create Page"
    ],
    "conversation": [
      {
        "request": "I need an agent to promote a Jira story to an epic. It should update the issue type and create a new Confluence page for the epic.",
        "response": "I can do that. It will use 'Update Jira Issue' to change the issue type to 'Epic'. Then it will use 'Create Page' in Confluence. Is that correct?"
      },
      {
        "request": "Yes, that's the workflow.",
        "response": "The agent is ready. Just provide the Jira story ID to promote it."
      }
    ],
    "agentInstructions": "The Jira Story Promoter agent helps you promote a Jira story to an epic. When you provide a story ID, the agent will: 1. Use `Jira: Update Jira Issue` to change the issue type to 'Epic'. 2. Use `Confluence: Create Page` to create a new page for the epic's details. Ensure the correct story is promoted."
  },
  {
    "useCaseId": "077",
    "agentName": "Team Holiday Calendar Creator",
    "toolSelection": [
      "Google Calendar: Create Calendar Event"
    ],
    "conversation": [
      {
        "request": "I need an agent to create a shared team holiday calendar in Google Calendar.",
        "response": "I can build that. It will use the 'Create Calendar Event' action to add holidays to a shared Google Calendar. Is that what you need?"
      },
      {
        "request": "Yes, that's it.",
        "response": "The agent is ready. Just provide the holiday dates and the shared calendar ID."
      }
    ],
    "agentInstructions": "The Team Holiday Calendar Creator agent helps you create a shared team holiday calendar. When you provide the holiday dates, the agent will use `Google Calendar: Create Calendar Event` to add them to your shared team calendar. Ensure you provide the correct calendar ID."
  },
  {
    "useCaseId": "078",
    "agentName": "Quarterly Business Review Organizer",
    "toolSelection": [
      "Confluence: Create Page",
      "Outlook: Create Calendar Event",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent to organize our quarterly business review. It should create a Confluence page for the presentation, schedule the meeting in Outlook, and send an announcement via Gmail.",
        "response": "I can build that. It will use 'Create Page' in Confluence, 'Create Calendar Event' in Outlook, and 'Send Email' from Gmail. Is that correct?"
      },
      {
        "request": "Yes, that's the complete process.",
        "response": "The agent is configured. Just provide the QBR details when you're ready."
      }
    ],
    "agentInstructions": "The Quarterly Business Review Organizer agent helps you organize your QBR. When you provide the details, the agent will: 1. Use `Confluence: Create Page` to create a page for the presentation. 2. Use `Outlook: Create Calendar Event` to schedule the meeting. 3. Use `Gmail: Send Email` to send an announcement to stakeholders. Ensure all details are correct and all actions are completed."
  },
  {
    "useCaseId": "079",
    "agentName": "ServiceNow Incident Closer",
    "toolSelection": [
      "ServiceNow: Update Incident"
    ],
    "conversation": [
      {
        "request": "I need a simple agent to close a ServiceNow incident.",
        "response": "I can build that. It will use the 'Update Incident' action in ServiceNow to set the status to 'Closed'. Is that what you need?"
      },
      {
        "request": "Yes, that's it.",
        "response": "The agent is ready. Just provide the incident ID to close it."
      }
    ],
    "agentInstructions": "The ServiceNow Incident Closer agent provides a simple way to close ServiceNow incidents. When you provide an incident ID, the agent will use `ServiceNow: Update Incident` to set the status to 'Closed'. Ensure the correct incident is closed."
  },
  {
    "useCaseId": "080",
    "agentName": "Jury Duty Notifier",
    "toolSelection": [
      "Workday: Request Time Off",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent to handle my jury duty notification. It should request the time off in Workday and email my team.",
        "response": "I can build that. It will use 'Request Time Off' in Workday. For the email, should it use Gmail or Outlook?"
      },
      {
        "request": "Use Gmail.",
        "response": "Got it. The agent will request the time off in Workday and then send a notification email to your team via Gmail. Is that correct?"
      },
      {
        "request": "Yes, that's the process.",
        "response": null
      }
    ],
    "agentInstructions": "The Jury Duty Notifier agent helps you handle jury duty notifications. When you have jury duty, the agent will: 1. Use `Workday: Request Time Off` to submit the request. 2. Use `Gmail: Send Email` to notify your team. Ensure the dates are correct and the notification is sent."
  },
  {
    "useCaseId": "081",
    "agentName": "Tech Talk Organizer",
    "toolSelection": [
      "Google Calendar: Create Calendar Event",
      "Confluence: Create Page",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent to organize a tech talk. It should schedule it, create a Confluence page for the abstract, and send an invitation.",
        "response": "I can build that. It will use 'Create Calendar Event' in Google Calendar, 'Create Page' in Confluence, and 'Send Email' from Gmail. Is that correct?"
      },
      {
        "request": "Yes, that's the full workflow.",
        "response": "The agent is configured. Just provide the tech talk details."
      }
    ],
    "agentInstructions": "The Tech Talk Organizer agent helps you organize tech talks. When you provide the details, the agent will: 1. Use `Google Calendar: Create Calendar Event` to schedule the talk. 2. Use `Confluence: Create Page` to create a page for the abstract and slides. 3. Use `Gmail: Send Email` to send an invitation to the engineering team. Ensure all details are correct."
  },
  {
    "useCaseId": "082",
    "agentName": "Jira Ticket Cloner",
    "toolSelection": [
      "Jira: Create Jira Issue",
      "Jira: Search Jira Issues"
    ],
    "conversation": [
      {
        "request": "I need an agent to clone a Jira ticket.",
        "response": "I can build that. It will use 'Search Jira Issues' to get the details of the ticket to clone, and then 'Create Jira Issue' to create a new one with the same details. Is that what you need?"
      },
      {
        "request": "Yes, that's it.",
        "response": "The agent is ready. Just provide the Jira ticket ID to clone it."
      }
    ],
    "agentInstructions": "The Jira Ticket Cloner agent helps you clone Jira tickets. When you provide a ticket ID, the agent will: 1. Use `Jira: Search Jira Issues` to get the details of the ticket. 2. Use `Jira: Create Jira Issue` to create a new ticket with the same details. Ensure the correct ticket is cloned."
  },
  {
    "useCaseId": "083",
    "agentName": "Company Holiday Announcer",
    "toolSelection": [
      "Outlook: Send Email",
      "Google Calendar: Create Calendar Event"
    ],
    "conversation": [
      {
        "request": "I need an agent to announce a company holiday. It should send an email and add it to the company's Google Calendar.",
        "response": "I can do that. It will use 'Send Email' from Outlook and 'Create Calendar Event' in Google Calendar. Is that correct?"
      },
      {
        "request": "Yes, that's the process.",
        "response": "The agent is configured. Just provide the holiday details."
      }
    ],
    "agentInstructions": "The Company Holiday Announcer agent helps you announce company holidays. When you provide the holiday details, the agent will: 1. Use `Outlook: Send Email` to announce the holiday to the company. 2. Use `Google Calendar: Create Calendar Event` to add the holiday to the company calendar. Ensure the details are correct and the announcement is sent."
  },
  {
    "useCaseId": "084",
    "agentName": "ServiceNow Problem Creator",
    "toolSelection": [
      "ServiceNow: Create Incident",
      "Jira: Search Jira Issues"
    ],
    "conversation": [
      {
        "request": "I need an agent to create a ServiceNow problem record from multiple incidents and link them in Jira.",
        "response": "I can build that. It will use 'Create Incident' in ServiceNow to create the problem record. How should it link them in Jira?"
      },
      {
        "request": "It should search for the incident numbers in Jira and link them to a new parent 'Problem' ticket.",
        "response": "Okay. The agent will create a ServiceNow problem, then search for the related incidents in Jira and link them to a new problem ticket. Is that correct?"
      },
      {
        "request": "Yes, that's the workflow.",
        "response": null
      }
    ],
    "agentInstructions": "The ServiceNow Problem Creator agent helps you create and manage problem records. The agent will: 1. Use `ServiceNow: Create Incident` to create a new problem record. 2. Use `Jira: Search Jira Issues` to find the related incident tickets. 3. Use `Jira: Create Jira Issue` to create a new parent 'Problem' ticket and link the incidents. Ensure the correct incidents are linked."
  },
  {
    "useCaseId": "085",
    "agentName": "Unpaid Time Off Booker",
    "toolSelection": [
      "Workday: Request Time Off",
      "Outlook: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent to book unpaid time off in Workday and notify my manager and HR.",
        "response": "I can build that. It will use 'Request Time Off' in Workday. For the notification, should it use Outlook or Gmail?"
      },
      {
        "request": "Use Outlook.",
        "response": "Got it. The agent will request the unpaid time off in Workday and then send a notification email to your manager and HR via Outlook. Is that correct?"
      },
      {
        "request": "Yes, that's the process.",
        "response": null
      }
    ],
    "agentInstructions": "The Unpaid Time Off Booker agent helps you book unpaid time off. When you provide the dates, the agent will: 1. Use `Workday: Request Time Off` to submit the request for unpaid leave. 2. Use `Outlook: Send Email` to notify your manager and HR. Ensure the dates are correct and the notification is sent."
  },
  {
    "useCaseId": "086",
    "agentName": "Jira Sprint Closer",
    "toolSelection": [
      "Jira: Update Jira Issue",
      "Confluence: Create Page"
    ],
    "conversation": [
      {
        "request": "I need an agent to close a Jira sprint. It should move unfinished stories to the next sprint and create a sprint report in Confluence.",
        "response": "I can do that. It will use 'Update Jira Issue' to move the stories. Then it will use 'Create Page' in Confluence for the report. Is that correct?"
      },
      {
        "request": "Yes, that's the workflow.",
        "response": "The agent is ready. Just provide the sprint ID to close it."
      }
    ],
    "agentInstructions": "The Jira Sprint Closer agent helps you close Jira sprints. When you provide a sprint ID, the agent will: 1. Use `Jira: Update Jira Issue` to move any unfinished stories to the next sprint. 2. Use `Confluence: Create Page` to create a sprint report with the completed and moved stories. Ensure the correct sprint is closed."
  },
  {
    "useCaseId": "087",
    "agentName": "Board Meeting Organizer",
    "toolSelection": [
      "Outlook: Create Calendar Event",
      "Confluence: Create Page",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent to organize a board meeting. It should schedule it in Outlook, create a private Confluence page for the agenda, and send a confidential email with the link.",
        "response": "I can build that. It will use 'Create Calendar Event' in Outlook, 'Create Page' in Confluence with restricted permissions, and 'Send Email' from Gmail. Is that correct?"
      },
      {
        "request": "Yes, that's the complete process. Security is key.",
        "response": "The agent is configured. Just provide the meeting details."
      }
    ],
    "agentInstructions": "The Board Meeting Organizer agent helps you organize board meetings. When you provide the details, the agent will: 1. Use `Outlook: Create Calendar Event` to schedule the meeting. 2. Use `Confluence: Create Page` to create a private page for the agenda with restricted permissions. 3. Use `Gmail: Send Email` to send a confidential email with the link to the board members. Ensure all details are correct and permissions are set correctly."
  },
  {
    "useCaseId": "088",
    "agentName": "Simple Gmailer",
    "toolSelection": [
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I need a very basic agent that can just send an email for me using Gmail.",
        "response": "I can build that. It will use the 'Send Email' action from Gmail. You would just provide the recipient, subject, and body. Is that what you need?"
      },
      {
        "request": "Yes, that's all.",
        "response": "The agent is configured. It's ready when you are."
      }
    ],
    "agentInstructions": "The Simple Gmailer agent provides a basic way to send emails using Gmail. When you provide the recipient, subject, and body, the agent will use `Gmail: Send Email` to send the email. Ensure the email is sent to the correct recipient with the correct content."
  },
  {
    "useCaseId": "089",
    "agentName": "ServiceNow Change Request Creator",
    "toolSelection": [
      "ServiceNow: Create Incident",
      "Outlook: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent to create a ServiceNow change request and notify the change advisory board.",
        "response": "I can build that. It will use 'Create Incident' in ServiceNow to create the change request. For the notification, should it use Outlook or Gmail?"
      },
      {
        "request": "Use Outlook.",
        "response": "Got it. The agent will create the change request in ServiceNow and then send a notification email to the change advisory board via Outlook. Is that correct?"
      },
      {
        "request": "Yes, that's the process.",
        "response": null
      }
    ],
    "agentInstructions": "The ServiceNow Change Request Creator agent helps you create ServiceNow change requests. When you provide the change details, the agent will: 1. Use `ServiceNow: Create Incident` to create a new change request. 2. Use `Outlook: Send Email` to notify the change advisory board. Ensure the change details are correct and the notification is sent."
  },
  {
    "useCaseId": "090",
    "agentName": "Sabbatical Leave Planner",
    "toolSelection": [
      "Workday: Request Time Off",
      "Gmail: Send Email",
      "Google Calendar: Create Calendar Event"
    ],
    "conversation": [
      {
        "request": "I need an agent to plan my sabbatical. It should request the leave in Workday, notify my department, and block my Google Calendar.",
        "response": "I can do that. It will use 'Request Time Off' in Workday. For the notification and calendar, should it use Gmail and Google Calendar?"
      },
      {
        "request": "Yes, use Gmail and Google Calendar.",
        "response": "Got it. The agent will request the leave in Workday, send a notification email via Gmail, and create a calendar event in Google Calendar. Is that correct?"
      },
      {
        "request": "Yes, that's the full plan.",
        "response": null
      }
    ],
    "agentInstructions": "The Sabbatical Leave Planner agent helps you plan your sabbatical. When you provide your leave dates, the agent will: 1. Use `Workday: Request Time Off` to submit the request. 2. Use `Gmail: Send Email` to notify your department. 3. Use `Google Calendar: Create Calendar Event` to block off your calendar. Ensure the dates are correct and all actions are completed."
  },
  {
    "useCaseId": "091",
    "agentName": "Jira Issue Linker",
    "toolSelection": [
      "Jira: Update Jira Issue"
    ],
    "conversation": [
      {
        "request": "I need a simple agent to link two Jira issues together.",
        "response": "I can build that. It will use the 'Update Jira Issue' action to add a link between two issues. You would provide the two issue IDs and the link type. Is that what you need?"
      },
      {
        "request": "Yes, that's it.",
        "response": "The agent is ready. Just provide the two issue IDs to link them."
      }
    ],
    "agentInstructions": "The Jira Issue Linker agent provides a simple way to link two Jira issues. When you provide two issue IDs and a link type (e.g., 'is blocked by'), the agent will use `Jira: Update Jira Issue` to link them. Ensure the correct issue IDs and link type are provided."
  },
  {
    "useCaseId": "092",
    "agentName": "Deprecation Announcer",
    "toolSelection": [
      "Confluence: Create Page",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent to announce the deprecation of a feature. It should create a Confluence page with the details and send an email to customers.",
        "response": "I can do that. It will use 'Create Page' in Confluence and 'Send Email' from Gmail. Is that correct?"
      },
      {
        "request": "Yes, that's the workflow.",
        "response": "The agent is configured. Just provide the deprecation details."
      }
    ],
    "agentInstructions": "The Deprecation Announcer agent helps you announce feature deprecations. When you provide the details, the agent will: 1. Use `Confluence: Create Page` to create a page with the deprecation plan and timeline. 2. Use `Gmail: Send Email` to announce the deprecation to customers. Ensure the details are correct and the announcement is sent to the right audience."
  },
  {
    "useCaseId": "093",
    "agentName": "ServiceNow Incident Commenter",
    "toolSelection": [
      "ServiceNow: Update Incident"
    ],
    "conversation": [
      {
        "request": "I need a simple agent to add a comment to a ServiceNow incident.",
        "response": "I can build that. It will use the 'Update Incident' action in ServiceNow. You would just provide the incident ID and the comment. Is that what you need?"
      },
      {
        "request": "Yes, that's it.",
        "response": "The agent is ready. Just provide the incident ID and your comment."
      }
    ],
    "agentInstructions": "The ServiceNow Incident Commenter agent provides a simple way to add comments to ServiceNow incidents. When you provide an incident ID and a comment, the agent will use `ServiceNow: Update Incident` to add the comment. Ensure the correct incident is updated."
  },
  {
    "useCaseId": "094",
    "agentName": "Charity Day Organizer",
    "toolSelection": [
      "Outlook: Create Calendar Event",
      "Outlook: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent to organize a charity day. It should schedule it in Outlook and send an email with details about the charity.",
        "response": "I can do that. It will use 'Create Calendar Event' in Outlook for the schedule. For the email, should it also use Outlook?"
      },
      {
        "request": "Yes, use Outlook for both.",
        "response": "Got it. The agent will create the calendar event and send a separate email with the charity details, both from Outlook. Is that correct?"
      },
      {
        "request": "Yes, that's the plan.",
        "response": null
      }
    ],
    "agentInstructions": "The Charity Day Organizer agent helps you organize charity days. When you provide the details, the agent will: 1. Use `Outlook: Create Calendar Event` to schedule the event. 2. Use `Outlook: Send Email` to send an email with details about the charity. Ensure the event is scheduled and the email is sent to the company."
  },
  {
    "useCaseId": "095",
    "agentName": "Jira Issue Mover",
    "toolSelection": [
      "Jira: Update Jira Issue"
    ],
    "conversation": [
      {
        "request": "I need a simple agent to move a Jira issue to another project.",
        "response": "I can build that. It will use the 'Update Jira Issue' action to change the project for an issue. Is that what you need?"
      },
      {
        "request": "Yes, that's it.",
        "response": "The agent is ready. Just provide the issue ID and the new project key."
      }
    ],
    "agentInstructions": "The Jira Issue Mover agent provides a simple way to move a Jira issue to another project. When you provide an issue ID and the new project key, the agent will use `Jira: Update Jira Issue` to move the issue. Ensure the correct issue and project are provided."
  },
  {
    "useCaseId": "096",
    "agentName": "Office Move Notifier",
    "toolSelection": [
      "Gmail: Send Email",
      "Google Calendar: Create Calendar Event"
    ],
    "conversation": [
      {
        "request": "I need an agent to notify the company about an office move. It should send an email and create a calendar event for the move date.",
        "response": "I can do that. It will use 'Send Email' from Gmail and 'Create Calendar Event' in Google Calendar. Is that correct?"
      },
      {
        "request": "Yes, that's the process.",
        "response": "The agent is configured. Just provide the office move details."
      }
    ],
    "agentInstructions": "The Office Move Notifier agent helps you notify the company about an office move. When you provide the details, the agent will: 1. Use `Gmail: Send Email` to announce the move. 2. Use `Google Calendar: Create Calendar Event` to block the move date on the company calendar. Ensure the details are correct and the announcement is sent."
  },
  {
    "useCaseId": "097",
    "agentName": "ServiceNow Knowledge Base Linker",
    "toolSelection": [
      "ServiceNow: Update Incident",
      "Confluence: Create Page"
    ],
    "conversation": [
      {
        "request": "I need an agent to link a ServiceNow incident to a new Confluence knowledge base article.",
        "response": "I can build that. It will use 'Create Page' in Confluence to create the article, and then 'Update Incident' in ServiceNow to add a link to the new article. Is that the workflow?"
      },
      {
        "request": "Yes, that's exactly it.",
        "response": "The agent is configured. Just provide the ServiceNow incident ID and the article content."
      }
    ],
    "agentInstructions": "The ServiceNow Knowledge Base Linker agent helps you link ServiceNow incidents to knowledge base articles. When you provide an incident ID and article content, the agent will: 1. Use `Confluence: Create Page` to create the new knowledge base article. 2. Use `ServiceNow: Update Incident` to add a link to the new article in the incident. Ensure the correct incident is updated."
  },
  {
    "useCaseId": "098",
    "agentName": "Military Leave Booker",
    "toolSelection": [
      "Workday: Request Time Off",
      "Outlook: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent to book military leave in Workday and notify my chain of command.",
        "response": "I can build that. It will use 'Request Time Off' in Workday. For the notification, should it use Outlook or Gmail?"
      },
      {
        "request": "Use Outlook.",
        "response": "Got it. The agent will request the military leave in Workday and then send a notification email to your chain of command via Outlook. Is that correct?"
      },
      {
        "request": "Yes, that's the process.",
        "response": null
      }
    ],
    "agentInstructions": "The Military Leave Booker agent helps you book military leave. When you provide the dates, the agent will: 1. Use `Workday: Request Time Off` to submit the request. 2. Use `Outlook: Send Email` to notify your chain of command. Ensure the dates are correct and the notification is sent."
  },
  {
    "useCaseId": "099",
    "agentName": "Jira Version Creator",
    "toolSelection": [
      "Jira: Create Jira Issue"
    ],
    "conversation": [
      {
        "request": "I need a simple agent to create a new version in a Jira project.",
        "response": "I can build that. It will use a Jira action to create a new version in a project. Is that what you need?"
      },
      {
        "request": "Yes, that's it.",
        "response": "The agent is ready. Just provide the project key and the version name."
      }
    ],
    "agentInstructions": "The Jira Version Creator agent provides a simple way to create new versions in Jira projects. When you provide a project key and version name, the agent will use a `Jira` action to create the new version. Note: This is a conceptual example, assuming a 'Create Version' action exists in Jira."
  },
  {
    "useCaseId": "100",
    "agentName": "Hackathon Organizer",
    "toolSelection": [
      "Confluence: Create Page",
      "Google Calendar: Create Calendar Event",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent to organize a hackathon. It should create a Confluence page for project ideas, schedule the event in Google Calendar, and send an announcement via Gmail.",
        "response": "I can build that. It will use 'Create Page' in Confluence, 'Create Calendar Event' in Google Calendar, and 'Send Email' from Gmail. Is that correct?"
      },
      {
        "request": "Yes, that's the complete process.",
        "response": "The agent is configured. Just provide the hackathon details when you're ready."
      }
    ],
    "agentInstructions": "The Hackathon Organizer agent helps you organize a hackathon. When you provide the details, the agent will: 1. Use `Confluence: Create Page` to create a page for project ideas. 2. Use `Google Calendar: Create Calendar Event` to schedule the event. 3. Use `Gmail: Send Email` to send an announcement to the company. Ensure all details are correct and all actions are completed."
  },
  [
  {
    "useCaseId": "101",
    "agentName": "Jira Sprint Auditor",
    "toolSelection": [
      "Jira: Search Jira Issues",
      "Jira: Update Jira Issue",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent to help me audit our active Jira sprints.",
        "response": "I can do that. What should the agent look for? For example, it could find high-priority tickets that are still unassigned."
      },
      {
        "request": "Exactly. It should find all unassigned P0 and P1 tickets in the active sprint, assign them to the project lead, and then send a summary email to me.",
        "response": "Got it. The agent will be configured to: 1. Search Jira for unassigned P0/P1 tickets in the current sprint. 2. For each ticket found, assign it to the project lead. 3. Send you a single summary email with a list of the tickets that were assigned. Is this correct?"
      },
      {
        "request": "Yes, that's the perfect workflow.",
        "response": null
      }
    ],
    "agentInstructions": "The Jira Sprint Auditor helps you maintain sprint hygiene. When you ask it to run, it will: 1. Use `Jira: Search Jira Issues` to find all P0 and P1 tickets in the active sprint that have no assignee. 2. For each ticket, it will use `Jira: Update Jira Issue` to assign it to the designated project lead. 3. It will then use `Gmail: Send Email` to send a summary report to you, listing all the tickets that were automatically assigned."
  },
  {
    "useCaseId": "102",
    "agentName": "Confluence Documentation Refresher",
    "toolSelection": [
      "Confluence: Search Pages",
      "Jira: Create Jira Issue"
    ],
    "conversation": [
      {
        "request": "I want to build an agent that finds old documentation in our Confluence space.",
        "response": "A great idea for keeping content fresh. How should the agent define 'old'? For example, not updated in the last 365 days?"
      },
      {
        "request": "Yes, let's say 365 days. For every page it finds, it should create a Jira task for the page's original author to review it.",
        "response": "Okay. The agent will: 1. Search the 'DOCS' Confluence space for pages not updated in 365 days. 2. For each page, it will identify the original author. 3. It will then create a Jira task assigned to that author, asking them to review or archive the page. Does that sound right?"
      },
      {
        "request": "Yes, that's exactly what I need.",
        "response": null
      }
    ],
    "agentInstructions": "The Confluence Documentation Refresher helps you find and manage stale content. When invoked, it will: 1. Use a `Confluence: Search Pages` capability to find all pages in a specified space that have not been modified in the last 365 days. 2. For each page found, it will identify the original author and use `Jira: Create Jira Issue` to create a new task, assigning it to the author with a request to review or archive the page."
  },
  {
    "useCaseId": "103",
    "agentName": "Gmail Action Item Extractor",
    "toolSelection": [
      "Gmail: Search Emails",
      "Jira: Create Jira Issue"
    ],
    "conversation": [
      {
        "request": "I need an agent that can find action items in my emails and turn them into Jira tickets.",
        "response": "I can configure that. Should it search for specific keywords in the email body, like 'ACTION ITEM:' or 'TODO:'?"
      },
      {
        "request": "Yes. It should search my inbox for emails from the last 24 hours containing 'ACTION ITEM:', and for each one, create a 'Task' in my personal Jira project.",
        "response": "Understood. The agent will be set up to: 1. Search your Gmail for emails in the last 24 hours with the phrase 'ACTION ITEM:'. 2. For each email found, it will create a new task in your 'PERS' Jira project, using the email's subject as the title and its body as the description. Is that correct?"
      },
      {
        "request": "Perfect.",
        "response": null
      }
    ],
    "agentInstructions": "The Gmail Action Item Extractor helps you convert emails into tasks. When you ask it to run, it will: 1. Use a `Gmail: Search Emails` capability to find emails in your inbox from the last 24 hours containing the specific phrase 'ACTION ITEM:'. 2. For each matching email, it will use `Jira: Create Jira Issue` to create a new task in your designated project, populating it with the email's subject and body."
  },
  {
    "useCaseId": "104",
    "agentName": "ServiceNow Stale Ticket Nudger",
    "toolSelection": [
      "ServiceNow: Search Incidents",
      "ServiceNow: Update Incident",
      "Outlook: Send Email"
    ],
    "conversation": [
      {
        "request": "Let's build an agent to follow up on stale IT tickets.",
        "response": "Good idea. What's the criteria for a 'stale' ticket? For example, any ticket that hasn't been updated in the last 7 days?"
      },
      {
        "request": "Yes, 7 days with no update. The agent should add a comment asking for an update and email the assignee.",
        "response": "Okay, the workflow will be: 1. Search ServiceNow for incidents with no update in 7 days. 2. For each incident, add a standard comment asking for a status update. 3. Then, send an email to the incident's assignee to notify them. Correct?"
      },
      {
        "request": "Yes, that's the one.",
        "response": null
      }
    ],
    "agentInstructions": "The ServiceNow Stale Ticket Nudger helps ensure tickets aren't forgotten. When run, it will: 1. Use a `ServiceNow: Search Incidents` capability to find all incidents that haven't been updated in the last 7 days. 2. For each incident, it will use `ServiceNow: Update Incident` to add a polite comment asking for a status update. 3. It will then use `Outlook: Send Email` to notify the assignee that their ticket requires attention."
  },
  {
    "useCaseId": "105",
    "agentName": "Calendar Meeting Auditor",
    "toolSelection": [
      "Google Calendar: Search Events",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I want an agent that can help me clean up my calendar.",
        "response": "I can help with that. What should it look for? For example, it could find meetings with no agenda."
      },
      {
        "request": "Exactly. Find all meetings on my calendar for next week that have more than 5 attendees and have no agenda in the description. Then, email the organizer of each and ask them to add one.",
        "response": "Okay, I can configure that. The agent will: 1. Search your Google Calendar for events next week with >5 attendees and an empty description. 2. For each event, it will identify the organizer. 3. It will then send an email to the organizer politely requesting an agenda. Is that the plan?"
      },
      {
        "request": "Yes, that will save me a lot of time.",
        "response": null
      }
    ],
    "agentInstructions": "The Calendar Meeting Auditor helps improve meeting efficiency. When you ask it to run, it will: 1. Use a `Google Calendar: Search Events` capability to find all events on your calendar for the upcoming week that have more than 5 attendees and an empty description. 2. For each such meeting, it will use `Gmail: Send Email` to send a polite request to the meeting organizer, asking them to add an agenda."
  },
  {
    "useCaseId": "106",
    "agentName": "Workday Leave Coordinator",
    "toolSelection": [
      "Workday: Search Leave Requests",
      "Confluence: Create Page"
    ],
    "conversation": [
      {
        "request": "I need an agent to help me get an overview of my team's upcoming leave.",
        "response": "I can do that. The agent can search Workday for approved leave for your team. What should it do with that information?"
      },
      {
        "request": "It should find all approved time off for my direct reports for the next month and create a single Confluence page with a table showing who is out on which days.",
        "response": "Excellent. The agent will be configured to: 1. Search Workday for approved leave requests for your direct reports in the next 30 days. 2. Consolidate this information into a schedule. 3. Create a new Confluence page with a formatted table of the leave schedule. Is that correct?"
      },
      {
        "request": "Yes, that's perfect.",
        "response": null
      }
    ],
    "agentInstructions": "The Workday Leave Coordinator helps you visualize team availability. When you run it, the agent will: 1. Use a `Workday: Search Leave Requests` capability to find all approved time off for your direct reports in the next 30 days. 2. Use `Confluence: Create Page` to generate a single page with a clear schedule of your team's upcoming leave."
  },
  {
    "useCaseId": "107",
    "agentName": "Jira Epic Story Summarizer",
    "toolSelection": [
      "Jira: Search Jira Issues",
      "Confluence: Create Page"
    ],
    "conversation": [
      {
        "request": "I want an agent that can create a summary page for a Jira epic.",
        "response": "I can do that. When you provide an epic ID, the agent can find all the child stories and their statuses. Where should it put this summary?"
      },
      {
        "request": "It should create a new page in our 'Projects' Confluence space. The page title should be the epic's name, and the content should be a list of all the stories and their current statuses.",
        "response": "Got it. The agent will: 1. Take a Jira Epic ID from you. 2. Use `Jira: Search Jira Issues` to find all child stories and get the epic's name. 3. Use `Confluence: Create Page` to create a new summary page in the 'Projects' space with the retrieved information. Correct?"
      },
      {
        "request": "Yes, that's the workflow.",
        "response": null
      }
    ],
    "agentInstructions": "The Jira Epic Story Summarizer helps you create quick reports. When you provide a Jira Epic ID, the agent will: 1. Use `Jira: Search Jira Issues` to find the epic's name and all of its child stories with their statuses. 2. Use `Confluence: Create Page` to generate a new page that neatly summarizes this information for easy sharing and review."
  },
  {
    "useCaseId": "108",
    "agentName": "Outlook Meeting Decliner",
    "toolSelection": [
      "Outlook: Search Events",
      "Outlook: Decline Event",
      "Outlook: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent to help me decline meetings when I'm on vacation.",
        "response": "That's a useful automation. The agent can search for meeting invitations that fall within your vacation dates. Should it automatically decline them?"
      },
      {
        "request": "Yes. It should find all invitations on my calendar during my PTO, decline them, and send a note to the organizer saying I am out of office.",
        "response": "Okay. So for the dates you specify, the agent will: 1. Search your Outlook calendar for tentative meeting invitations. 2. For each one, it will decline the event. 3. It will then send an email to the organizer explaining that you are on PTO. Is that the correct process?"
      },
      {
        "request": "Yes, that's it.",
        "response": null
      }
    ],
    "agentInstructions": "The Outlook Meeting Decliner helps you manage your calendar while you're away. When you provide your vacation dates, it will: 1. Use an `Outlook: Search Events` capability to find all tentative meeting invitations within those dates. 2. Use an `Outlook: Decline Event` capability to decline each one. 3. Use `Outlook: Send Email` to send a polite message to each organizer informing them that you are out of office."
  },
  {
    "useCaseId": "109",
    "agentName": "Jira Release Candidate Auditor",
    "toolSelection": [
      "Jira: Search Jira Issues",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent to check our upcoming release for any open bugs.",
        "response": "I can do that. When you provide a 'fixVersion', the agent can search for any issues with that version that are not yet in 'Done' or 'Closed' status. What should it do if it finds any?"
      },
      {
        "request": "It should email the release manager with a list of all the open tickets that are blocking the release.",
        "response": "Understood. The agent will: 1. Search Jira for any issues in the specified 'fixVersion' that are not 'Done'. 2. Compile a list of these issues. 3. Email the list to the release manager. Is that correct?"
      },
      {
        "request": "Yes, that's exactly right.",
        "response": null
      }
    ],
    "agentInstructions": "The Jira Release Candidate Auditor helps you ensure releases are ready. When you provide a 'fixVersion', the agent will: 1. Use `Jira: Search Jira Issues` to find all tickets associated with that version that are not in a 'Done' or 'Closed' state. 2. Use `Gmail: Send Email` to send a report to the release manager, listing all the open tickets that require attention before the release can proceed."
  },
  {
    "useCaseId": "110",
    "agentName": "Onboarding Ticket Creator",
    "toolSelection": [
      "Workday: Search New Hires",
      "Jira: Create Jira Issue"
    ],
    "conversation": [
      {
        "request": "I want an agent that can create IT onboarding tickets for new hires.",
        "response": "I can do that. The agent can be configured to search Workday for any employees who have a start date of next week. Should it then create IT setup tickets for them in Jira?"
      },
      {
        "request": "Yes. It should find all new hires starting next week and create a 'New Hire IT Setup' ticket in Jira for each one.",
        "response": "Okay. The agent will: 1. Search Workday for new hires with a start date in the next 7 days. 2. For each new hire found, it will create a standardized IT setup ticket in Jira. Is that the workflow you'd like?"
      },
      {
        "request": "Yes, that's perfect.",
        "response": null
      }
    ],
    "agentInstructions": "The Onboarding Ticket Creator automates IT setup for new employees. When run, it will: 1. Use a `Workday: Search New Hires` capability to find all employees with a start date in the upcoming week. 2. For each new hire, it will use `Jira: Create Jira Issue` to create a standardized 'New Hire IT Setup' ticket, ensuring the IT team is prepared."
  },
  {
    "useCaseId": "111",
    "agentName": "Gmail Project Summarizer",
    "toolSelection": [
      "Gmail: Search Emails",
      "Confluence: Create Page"
    ],
    "conversation": [
      {
        "request": "I need an agent to find all emails related to a specific project and create a summary page.",
        "response": "I can do that. When you provide a project name, the agent can search your Gmail for all emails with that project name in the subject line. Where should it save the summary?"
      },
      {
        "request": "It should create a new page in my personal Confluence space, listing the subject lines and senders of all the emails it found.",
        "response": "Got it. The agent will: 1. Search your Gmail for emails matching the project name in the subject. 2. Extract the subject and sender from each email. 3. Create a new Confluence page with this compiled list. Is that correct?"
      },
      {
        "request": "Yes, that's what I need.",
        "response": null
      }
    ],
    "agentInstructions": "The Gmail Project Summarizer helps you organize project communications. When you provide a project name, it will: 1. Use a `Gmail: Search Emails` capability to find all emails with the project name in the subject. 2. Use `Confluence: Create Page` to create a new page that lists the subject lines and senders of all matching emails, giving you a quick overview of project communications."
  },
  {
    "useCaseId": "112",
    "agentName": "ServiceNow Incident Reporter",
    "toolSelection": [
      "ServiceNow: Search Incidents",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I want an agent that can generate a weekly report of all new critical incidents.",
        "response": "I can configure that. The agent can search ServiceNow for all P0 and P1 incidents created in the last 7 days. Who should receive this report?"
      },
      {
        "request": "It should send the report to the 'it-leadership@example.com' distribution list.",
        "response": "Okay. The agent will be set up to: 1. Search ServiceNow for all P0/P1 incidents from the past week. 2. Format the results into a summary. 3. Email this summary to the IT leadership team. Is this correct?"
      },
      {
        "request": "Yes, that's the process.",
        "response": null
      }
    ],
    "agentInstructions": "The ServiceNow Incident Reporter helps keep leadership informed. When run, it will: 1. Use a `ServiceNow: Search Incidents` capability to find all P0 and P1 incidents created in the last 7 days. 2. Use `Gmail: Send Email` to send a formatted summary of these critical incidents to a designated leadership email address."
  },
  {
    "useCaseId": "113",
    "agentName": "Jira Bug Triage Assistant",
    "toolSelection": [
      "Jira: Search Jira Issues",
      "Jira: Update Jira Issue"
    ],
    "conversation": [
      {
        "request": "I need an agent to help me with our bug triage process.",
        "response": "I can help with that. What's the first step? For example, I can find all new, untriaged bugs."
      },
      {
        "request": "Yes. Find all bugs in the 'Mobile' project with no priority set. For each one, add the 'Needs-Triage' label.",
        "response": "Okay, a simple and effective workflow. The agent will: 1. Search Jira for bugs in the 'Mobile' project where the priority is empty. 2. For each bug found, it will add the 'Needs-Triage' label. Is that correct?"
      },
      {
        "request": "Yes, that's all it needs to do.",
        "response": null
      }
    ],
    "agentInstructions": "The Jira Bug Triage Assistant helps you identify and label untriaged bugs. When you run it, the agent will: 1. Use `Jira: Search Jira Issues` to find all bugs in a specified project that do not have a priority set. 2. For each bug it finds, it will use `Jira: Update Jira Issue` to add a 'Needs-Triage' label, making them easy to find and process."
  },
  {
    "useCaseId": "114",
    "agentName": "Calendar Free Slot Finder",
    "toolSelection": [
      "Google Calendar: Search Events",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I want an agent that can find a time for my team to meet next week.",
        "response": "I can do that. I can search your team's calendars to find a 30-minute slot where everyone is free. Who should I send the proposed times to?"
      },
      {
        "request": "Find a 30-minute slot for the 'Core-Dev' team next week and email the top 3 suggestions to me.",
        "response": "Understood. The agent will: 1. Get the member list for the 'Core-Dev' team. 2. Search their Google Calendars for three common 30-minute free slots next week. 3. Email those suggestions to you. Is that the plan?"
      },
      {
        "request": "Yes, that's perfect.",
        "response": null
      }
    ],
    "agentInstructions": "The Calendar Free Slot Finder helps you schedule team meetings without the back-and-forth. When you provide a team name and meeting duration, it will: 1. Use a `Google Calendar: Search Events` capability to check the availability of all team members. 2. Identify the top 3 time slots where everyone is free. 3. Use `Gmail: Send Email` to send the suggested times to you so you can make the final decision."
  },
  {
    "useCaseId": "115",
    "agentName": "Confluence Action Item Tracker",
    "toolSelection": [
      "Confluence: Search Pages",
      "Jira: Search Jira Issues",
      "Confluence: Update Page"
    ],
    "conversation": [
      {
        "request": "I need an agent that can update our meeting notes with the status of any action items.",
        "response": "That's a great way to keep documents live. The agent can search a Confluence page for Jira ticket numbers. For each one it finds, it can get the latest status from Jira and update the page. Is that what you're looking for?"
      },
      {
        "request": "Yes. I want to point it at a Confluence page, and it should find all the Jira tickets mentioned and write the current status next to each one.",
        "response": "Okay. The agent will: 1. Scan a Confluence page URL you provide for Jira issue keys. 2. For each key, it will use `Jira: Search Jira Issues` to get the status. 3. It will then update the Confluence page to reflect the current status of each ticket. Correct?"
      },
      {
        "request": "Yes, that's the workflow.",
        "response": null
      }
    ],
    "agentInstructions": "The Confluence Action Item Tracker keeps your meeting notes up-to-date. When you provide a Confluence page URL, it will: 1. Use a `Confluence: Search Pages` capability to find all Jira issue keys mentioned on the page. 2. For each key, it will use `Jira: Search Jira Issues` to retrieve the current status. 3. It will then use a `Confluence: Update Page` capability to insert the latest status next to each issue key on the page."
  },
  {
    "useCaseId": "116",
    "agentName": "Jira Overdue Task Notifier",
    "toolSelection": [
      "Jira: Search Jira Issues",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I want to build an agent that finds and sends reminders for overdue tasks.",
        "response": "I can do that. The agent can search Jira for tasks whose due date has passed but are not yet 'Done'. Should it notify the assignee of the task?"
      },
      {
        "request": "Yes. It should find all overdue tasks in the 'Marketing' project and send a polite reminder email to each assignee.",
        "response": "Understood. The agent will: 1. Search Jira for incomplete tasks in the 'Marketing' project with a due date in the past. 2. For each task, it will identify the assignee. 3. It will then send a reminder email to that assignee with a link to the overdue task. Is that correct?"
      },
      {
        "request": "Yes, that's exactly it.",
        "response": null
      }
    ],
    "agentInstructions": "The Jira Overdue Task Notifier helps keep projects on track. When run, it will: 1. Use `Jira: Search Jira Issues` to find all tasks in a specified project that are past their due date but not yet completed. 2. For each overdue task, it will use `Gmail: Send Email` to send a polite reminder to the assignee, including a direct link to the Jira ticket."
  },
  {
    "useCaseId": "117",
    "agentName": "Meeting Prep Assistant",
    "toolSelection": [
      "Google Calendar: Search Events",
      "Confluence: Search Pages",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent to help me prepare for my meetings tomorrow.",
        "response": "I can do that. The agent can look at your calendar for tomorrow, and for each meeting, find a relevant Confluence page to help you prepare. Would you like that?"
      },
      {
        "request": "Yes. It should find all my meetings for tomorrow, search Confluence for a page with the same title as the meeting, and email me a list of the meetings with links to the pages it found.",
        "response": "Okay. The agent will: 1. Look at your Google Calendar for tomorrow's events. 2. For each event, search Confluence for a matching page title. 3. Send you a single email summarizing tomorrow's meetings and including links to any relevant documents it found. Is that correct?"
      },
      {
        "request": "Yes, that's a great prep tool.",
        "response": null
      }
    ],
    "agentInstructions": "The Meeting Prep Assistant helps you prepare for your day. When you ask, it will: 1. Use a `Google Calendar: Search Events` capability to find all your meetings for the next day. 2. For each meeting, it will use a `Confluence: Search Pages` capability to find a page with a matching title. 3. It will then use `Gmail: Send Email` to send you a summary of your day's meetings, with direct links to the relevant Confluence pages for prep."
  },
  {
    "useCaseId": "118",
    "agentName": "ServiceNow to Jira Escalator",
    "toolSelection": [
      "ServiceNow: Search Incidents",
      "Jira: Create Jira Issue",
      "ServiceNow: Update Incident"
    ],
    "conversation": [
      {
        "request": "I need to build an agent that can escalate a ServiceNow ticket to Jira.",
        "response": "I can configure that. When you provide a ServiceNow incident ID, the agent can copy the details and create a new bug in Jira. Should it then link the new Jira ticket back to the original ServiceNow incident?"
      },
      {
        "request": "Yes, that's crucial. It needs to create the Jira bug and then add a comment to the ServiceNow ticket with the new Jira issue ID.",
        "response": "Got it. The agent will: 1. Get the details of a ServiceNow incident. 2. Create a new Jira bug with those details. 3. Add a comment to the ServiceNow incident with the new Jira ID for tracking. Is that the workflow?"
      },
      {
        "request": "Yes, that's it.",
        "response": null
      }
    ],
    "agentInstructions": "The ServiceNow to Jira Escalator streamlines your support workflow. When you provide a ServiceNow Incident ID, it will: 1. Use a `ServiceNow: Search Incidents` capability to retrieve the incident's details. 2. Use `Jira: Create Jira Issue` to create a new bug in the engineering team's project. 3. Use `ServiceNow: Update Incident` to add a comment to the original ticket with the new Jira issue ID, ensuring the support and engineering teams are linked."
  },
  {
    "useCaseId": "119",
    "agentName": "Jira Sub-task Assigner",
    "toolSelection": [
      "Jira: Search Jira Issues",
      "Jira: Update Jira Issue"
    ],
    "conversation": [
      {
        "request": "I want an agent that can assign all the sub-tasks of an epic to the epic's owner.",
        "response": "That's a great way to ensure ownership. The agent can find the epic, identify its owner, and then find all of its sub-tasks and assign them to that person. Is that the logic you want?"
      },
      {
        "request": "Yes. I want to give it an epic ID, and it should assign all open sub-tasks to whoever owns the epic.",
        "response": "Okay. The agent will be configured to: 1. Find the owner of the provided epic ID. 2. Find all open sub-tasks linked to that epic. 3. For each sub-task, assign it to the epic's owner. Correct?"
      },
      {
        "request": "Yes, that's perfect.",
        "response": null
      }
    ],
    "agentInstructions": "The Jira Sub-task Assigner helps you bulk-assign work. When you provide an Epic ID, it will: 1. Use `Jira: Search Jira Issues` to identify the owner of the epic. 2. Use `Jira: Search Jira Issues` again to find all open sub-tasks within that epic. 3. It will then loop through the sub-tasks and use `Jira: Update Jira Issue` to assign each one to the epic's owner."
  },
  {
    "useCaseId": "120",
    "agentName": "Team PTO Reporter",
    "toolSelection": [
      "Workday: Search Leave Requests",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent that can send me a weekly summary of my team's approved time off.",
        "response": "I can do that. The agent can be configured to search Workday for all approved PTO for your direct reports for the upcoming week. Would you like it to email that summary to you?"
      },
      {
        "request": "Yes. Every Friday, I want it to search Workday for next week's PTO and send me the list in an email.",
        "response": "Understood. The agent will: 1. Search Workday for approved leave for your direct reports for the next 7 days. 2. Format this into a list. 3. Email the list to you. Is that correct?"
      },
      {
        "request": "Yes, that's the one.",
        "response": null
      }
    ],
    "agentInstructions": "The Team PTO Reporter helps you stay informed about your team's availability. When you ask, it will: 1. Use a `Workday: Search Leave Requests` capability to find all approved time off for your direct reports for the next 7 days. 2. Use `Gmail: Send Email` to send you a formatted summary of the upcoming leave schedule."
  },
  {
    "useCaseId": "121",
    "agentName": "Stale Jira Ticket Closer",
    "toolSelection": [
      "Jira: Search Jira Issues",
      "Jira: Update Jira Issue"
    ],
    "conversation": [
      {
        "request": "I need an agent to help me clean up our Jira backlog.",
        "response": "I can help with that. What are the criteria for a ticket that needs to be closed? For example, tickets that haven't been updated in a long time."
      },
      {
        "request": "Yes. Find all tickets in the 'Infra' project that are in 'To Do' status and haven't been updated in over 90 days. For each one, add a comment saying 'Closing due to inactivity' and then close the ticket.",
        "response": "Okay, that's a clear cleanup rule. The agent will: 1. Search Jira for 'Infra' tickets in 'To Do' that are older than 90 days. 2. For each, it will add the inactivity comment. 3. It will then change the status to 'Closed'. Is that correct?"
      },
      {
        "request": "Yes, let's do it.",
        "response": null
      }
    ],
    "agentInstructions": "The Stale Jira Ticket Closer helps you manage your backlog. When run, it will: 1. Use `Jira: Search Jira Issues` to find all tickets in a specified project that are in 'To Do' status and have not been updated in 90 days. 2. For each ticket, it will use `Jira: Update Jira Issue` to add a comment explaining the closure. 3. It will then use `Jira: Update Jira Issue` again to change the ticket's status to 'Closed'."
  },
  {
    "useCaseId": "122",
    "agentName": "ServiceNow Knowledge Gap Finder",
    "toolSelection": [
      "ServiceNow: Search Incidents",
      "Confluence: Search Pages",
      "Jira: Create Jira Issue"
    ],
    "conversation": [
      {
        "request": "I want an agent that can help us identify gaps in our IT knowledge base.",
        "response": "That's a proactive approach. The agent could search for recently resolved ServiceNow incidents and check if a corresponding knowledge base article exists in Confluence. Would that be helpful?"
      },
      {
        "request": "Yes. Search for all 'Resolved' incidents from the last 7 days. For each one, search Confluence to see if a KB article with the incident number exists. If not, create a Jira task for the IT team to write one.",
        "response": "Excellent. The agent will: 1. Find resolved ServiceNow incidents from the last week. 2. For each, search Confluence for a matching KB article. 3. If no article is found, create a Jira task for the IT team to document the resolution. Is that the workflow?"
      },
      {
        "request": "Yes, that's perfect.",
        "response": null
      }
    ],
    "agentInstructions": "The ServiceNow Knowledge Gap Finder helps you improve your support documentation. When run, it will: 1. Use a `ServiceNow: Search Incidents` capability to find all 'Resolved' incidents from the past 7 days. 2. For each incident, it will use a `Confluence: Search Pages` capability to check for a KB article mentioning the incident number. 3. If no article is found, it will use `Jira: Create Jira Issue` to create and assign a task for the support team to create one."
  },
  {
    "useCaseId": "123",
    "agentName": "Recurring Meeting Scheduler",
    "toolSelection": [
      "Confluence: Search Pages",
      "Google Calendar: Create Calendar Event"
    ],
    "conversation": [
      {
        "request": "I need an agent to schedule our recurring project syncs.",
        "response": "I can do that. How should the agent get the list of attendees for the meeting?"
      },
      {
        "request": "It should look at the 'Project Phoenix Team' page in Confluence to get the list of team members, and then schedule a 30-minute recurring weekly meeting with them on Google Calendar.",
        "response": "Okay. The agent will: 1. Get the content of the 'Project Phoenix Team' page from Confluence. 2. Parse the content to identify the list of team members. 3. Schedule a recurring 30-minute weekly meeting with that list of attendees. Is that correct?"
      },
      {
        "request": "Yes, that's the process.",
        "response": null
      }
    ],
    "agentInstructions": "The Recurring Meeting Scheduler helps you automate meeting setup. When you provide a Confluence page title, it will: 1. Use a `Confluence: Search Pages` capability to find the page and extract the list of team members from its content. 2. Use `Google Calendar: Create Calendar Event` to schedule a recurring weekly 30-minute meeting with all the identified team members."
  },
  {
    "useCaseId": "124",
    "agentName": "Jira Epic Health Reporter",
    "toolSelection": [
      "Jira: Search Jira Issues",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I want an agent that can give me a health report on a Jira epic.",
        "response": "I can do that. What metrics would you consider for a 'health report'? For example, the percentage of completed stories vs. open ones?"
      },
      {
        "request": "Yes. For a given epic ID, it should calculate the percentage of stories that are 'Done', 'In Progress', and 'To Do', and also list any stories that are marked as 'Blocked'. Then it should email me that report.",
        "response": "A comprehensive report. The agent will: 1. Find all stories in the epic. 2. Categorize them by status (Done, In Progress, To Do, Blocked). 3. Calculate the percentages. 4. Send you a formatted email with this health report. Is that correct?"
      },
      {
        "request": "Yes, that's exactly what I need.",
        "response": null
      }
    ],
    "agentInstructions": "The Jira Epic Health Reporter provides a quick overview of your epics. When you provide an Epic ID, it will: 1. Use `Jira: Search Jira Issues` to get all child stories and their statuses. 2. It will then calculate the percentage of stories in each status category (To Do, In Progress, Done) and identify any 'Blocked' stories. 3. Finally, it will use `Gmail: Send Email` to send you a formatted health report."
  },
  {
    "useCaseId": "125",
    "agentName": "Workday Anniversary Notifier",
    "toolSelection": [
      "Workday: Search Anniversaries",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I want to build an agent that can send a 'Happy Anniversary!' email to employees on their work anniversary.",
        "response": "That's a great idea for team morale. The agent can search Workday for anyone whose anniversary is today. Should it send the email directly to the employee?"
      },
      {
        "request": "It should send the email to the employee's manager, so the manager can then personally congratulate them.",
        "response": "Even better. The agent will: 1. Search Workday for employees whose work anniversary is today. 2. For each employee, find their manager. 3. Send an email to the manager with a message like 'Today is [Employee]'s work anniversary!'. Is that the plan?"
      },
      {
        "request": "Yes, that's perfect.",
        "response": null
      }
    ],
    "agentInstructions": "The Workday Anniversary Notifier helps you recognize your team's milestones. When run, it will: 1. Use a `Workday: Search Anniversaries` capability to find all employees whose work anniversary is today. 2. For each employee, it will identify their manager. 3. It will then use `Gmail: Send Email` to send a notification to the manager, reminding them of their direct report's special day."
  },
  {
    "useCaseId": "126",
    "agentName": "Interview Feedback Consolidator",
    "toolSelection": [
      "Gmail: Search Emails",
      "Jira: Update Jira Issue"
    ],
    "conversation": [
      {
        "request": "I need an agent to help me collect interview feedback.",
        "response": "I can do that. The agent can search your email for feedback and consolidate it somewhere. Where would you like the feedback to be stored?"
      },
      {
        "request": "For a given candidate's Jira ticket, find all emails in my inbox with the ticket number in the subject, and append the body of each email as a comment on that Jira ticket.",
        "response": "A great way to keep all feedback in one place. The agent will: 1. Take a Jira ticket number. 2. Search your Gmail for emails with that number in the subject. 3. For each email, it will add its content as a new comment on the Jira ticket. Is that correct?"
      },
      {
        "request": "Yes, that's the workflow.",
        "response": null
      }
    ],
    "agentInstructions": "The Interview Feedback Consolidator helps you centralize candidate feedback. When you provide a candidate's Jira ticket number, it will: 1. Use a `Gmail: Search Emails` capability to find all emails in your inbox with the ticket number in the subject line. 2. For each email found, it will use `Jira: Update Jira Issue` to add the email's content as a comment to the candidate's ticket."
  },
  {
    "useCaseId": "127",
    "agentName": "Project Launch Go/No-Go",
    "toolSelection": [
      "Jira: Search Jira Issues",
      "Outlook: Send Email"
    ],
    "conversation": [
      {
        "request": "I want an agent to help me make a go/no-go decision for a project launch.",
        "response": "I can help with that. The agent can check for any release-blocking issues in Jira. What is the project and version you are launching?"
      },
      {
        "request": "Check the 'Phoenix' project, version 'v3.0'. If there are any open P0 bugs, send a 'NO-GO' email to the leadership team with a list of the blocking bugs. Otherwise, send a 'GO' email.",
        "response": "Okay, a critical check. The agent will: 1. Search Jira for open P0 bugs in project 'Phoenix' with fixVersion 'v3.0'. 2. If it finds any, it will email a 'NO-GO' alert with the bug list. 3. If it finds none, it will email a 'GO for launch' message. Is that the logic?"
      },
      {
        "request": "Yes, that's exactly what I need.",
        "response": null
      }
    ],
    "agentInstructions": "The Project Launch Go/No-Go agent helps you make data-driven launch decisions. When you provide a project and version, it will: 1. Use `Jira: Search Jira Issues` to check for any open P0 bugs in that release. 2. Based on the result, it will use `Outlook: Send Email` to send either a 'GO' or a 'NO-GO' email to a predefined leadership list, including the list of blocking bugs in the 'NO-GO' case."
  },
  {
    "useCaseId": "128",
    "agentName": "Confluence Page Link Checker",
    "toolSelection": [
      "Confluence: Search Pages",
      "Jira: Search Jira Issues",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent that can find broken Jira links in a Confluence page.",
        "response": "I can do that. The agent can scan a Confluence page for Jira issue keys and then check if those issues still exist. What should it do if it finds a broken link?"
      },
      {
        "request": "It should email me a list of any Jira issue keys mentioned on the page that do not exist or have been moved to a different project.",
        "response": "Understood. The agent will: 1. Scan a Confluence page for all Jira issue keys. 2. For each key, it will verify its existence in Jira. 3. It will then email you a report of any keys that are invalid or could not be found. Is that correct?"
      },
      {
        "request": "Yes, that's the process.",
        "response": null
      }
    ],
    "agentInstructions": "The Confluence Page Link Checker helps you maintain documentation quality. When you provide a Confluence page URL, it will: 1. Use a `Confluence: Search Pages` capability to extract all mentioned Jira issue keys. 2. For each key, it will use `Jira: Search Jira Issues` to validate its existence. 3. It will then use `Gmail: Send Email` to send you a report listing any invalid or broken Jira links."
  },
  {
    "useCaseId": "129",
    "agentName": "ServiceNow Incident Trend Reporter",
    "toolSelection": [
      "ServiceNow: Search Incidents",
      "Confluence: Create Page"
    ],
    "conversation": [
      {
        "request": "I want an agent that can identify trending IT issues.",
        "response": "I can help with that. The agent can search for incidents over a period of time and group them by category to identify trends. What time frame should it look at?"
      },
      {
        "request": "Search all ServiceNow incidents created in the last 30 days. Group them by category, count them, and create a Confluence page with a summary of the top 5 most common incident categories.",
        "response": "A great way to spot recurring problems. The agent will: 1. Get all incidents from the last 30 days. 2. Analyze and count them by category. 3. Create a Confluence page with a report on the top 5 categories. Is that the workflow?"
      },
      {
        "request": "Yes, that's perfect.",
        "response": null
      }
    ],
    "agentInstructions": "The ServiceNow Incident Trend Reporter helps you identify systemic issues. When run, it will: 1. Use a `ServiceNow: Search Incidents` capability to get all incidents from the last 30 days. 2. It will process this data to find the top 5 most frequent incident categories. 3. It will then use `Confluence: Create Page` to generate a report summarizing these trends."
  },
  {
    "useCaseId": "130",
    "agentName": "Calendar Conflict Resolver",
    "toolSelection": [
      "Google Calendar: Search Events",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent to help me resolve a scheduling conflict.",
        "response": "I can help with that. If you have two meetings that overlap, I can help you notify the organizers. What are the meetings?"
      },
      {
        "request": "I have a 'Team Sync' and a 'Client Call' that overlap tomorrow. Email the organizer of the 'Team Sync', let them know about the conflict, and ask if the meeting can be rescheduled.",
        "response": "Okay. The agent will: 1. Find the 'Team Sync' event on your calendar to identify the organizer. 2. Send an email to that organizer explaining the conflict with the 'Client Call' and asking to reschedule. Is that correct?"
      },
      {
        "request": "Yes, please do that.",
        "response": null
      }
    ],
    "agentInstructions": "The Calendar Conflict Resolver helps you manage your schedule. When you identify a meeting conflict, tell the agent the name of the meeting you want to reschedule. It will: 1. Use a `Google Calendar: Search Events` capability to find the event and its organizer. 2. Use `Gmail: Send Email` to send an email to the organizer, explaining the conflict and requesting to find a new time."
  },
  {
    "useCaseId": "131",
    "agentName": "Jira Project Scaffolder",
    "toolSelection": [
      "Confluence: Search Pages",
      "Jira: Create Jira Issue"
    ],
    "conversation": [
      {
        "request": "I want an agent that can create a standard set of epics for a new project.",
        "response": "I can do that. The agent can read a list of standard epics from a template. Where is this template stored?"
      },
      {
        "request": "I have a 'Standard Project Epics' page in Confluence. The agent should read the list of epics from that page and create them in a new Jira project I specify.",
        "response": "A great way to standardize projects. The agent will: 1. Read the list of epic titles from the 'Standard Project Epics' Confluence page. 2. For each title, create a new epic in the Jira project you provide. Is that the plan?"
      },
      {
        "request": "Yes, that's it.",
        "response": null
      }
    ],
    "agentInstructions": "The Jira Project Scaffolder helps you standardize project setup. When you provide a new Jira project key, it will: 1. Use a `Confluence: Search Pages` capability to read a predefined list of epic titles from a template page. 2. For each title in the list, it will use `Jira: Create Jira Issue` to create a new epic in your new project."
  },
  {
    "useCaseId": "132",
    "agentName": "Workday Birthday Notifier",
    "toolSelection": [
      "Workday: Search Birthdays",
      "Outlook: Send Email"
    ],
    "conversation": [
      {
        "request": "I want to build an agent that sends a 'Happy Birthday!' email to my team members on their birthday.",
        "response": "That's a nice idea. The agent can search Workday for anyone on your team whose birthday is today. Should it send the email to the whole team to sign a virtual card?"
      },
      {
        "request": "Yes. It should find anyone on my team with a birthday today, and then send an email to the entire team distribution list letting them know.",
        "response": "Okay. The agent will: 1. Search Workday for team members with a birthday today. 2. If it finds someone, it will send an email to the team distribution list to celebrate. Is that correct?"
      },
      {
        "request": "Yes, that's the plan.",
        "response": null
      }
    ],
    "agentInstructions": "The Workday Birthday Notifier helps you celebrate your team. When run, it will: 1. Use a `Workday: Search Birthdays` capability to find any of your direct reports whose birthday is today. 2. If a birthday is found, it will use `Outlook: Send Email` to send a celebratory notification to your team's distribution list."
  },
  {
    "useCaseId": "133",
    "agentName": "Gmail Unread Mail Summarizer",
    "toolSelection": [
      "Gmail: Search Emails",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent to summarize my unread emails from a specific person.",
        "response": "I can do that. When you provide a sender's email address, the agent can find all unread emails from them and send you a summary. Is that what you need?"
      },
      {
        "request": "Yes. Find all my unread emails from 'ceo@example.com', and send a single email to me with a list of their subject lines and the time they were sent.",
        "response": "A good way to prioritize. The agent will: 1. Search your Gmail for all unread emails from 'ceo@example.com'. 2. Compile a list of their subjects and timestamps. 3. Email this summary list to you. Is that correct?"
      },
      {
        "request": "Yes, that's perfect.",
        "response": null
      }
    ],
    "agentInstructions": "The Gmail Unread Mail Summarizer helps you catch up on important emails. When you provide a sender's email address, it will: 1. Use a `Gmail: Search Emails` capability to find all unread emails from that person. 2. It will then use `Gmail: Send Email` to send a summary of those emails (including subject lines and timestamps) directly to you."
  },
  {
    "useCaseId": "134",
    "agentName": "Jira Dependency Checker",
    "toolSelection": [
      "Jira: Search Jira Issues",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent to check for potential project delays.",
        "response": "I can help with that. For example, I can find tickets that are blocked by other tickets that are not yet done. Is that what you mean?"
      },
      {
        "request": "Yes. Find all tickets in the 'Mobile-Release' project that are blocked by tickets in other projects. Then, for each blocked ticket, email the owner of the blocking ticket and ask for a status update.",
        "response": "Okay, that's a proactive way to manage dependencies. The agent will: 1. Search Jira for tickets in 'Mobile-Release' that have external blockers. 2. For each, identify the blocking ticket and its owner. 3. Email the owner of the blocking ticket to ask for an update. Is that correct?"
      },
      {
        "request": "Yes, that's the workflow.",
        "response": null
      }
    ],
    "agentInstructions": "The Jira Dependency Checker helps you proactively manage project risks. When you run it for a project, it will: 1. Use `Jira: Search Jira Issues` to find all tickets that are blocked by tickets from other projects. 2. For each dependency found, it will use `Gmail: Send Email` to contact the owner of the blocking ticket and ask for a status update, CC'ing the owner of the blocked ticket for visibility."
  },
  {
    "useCaseId": "135",
    "agentName": "Confluence Team Roster Updater",
    "toolSelection": [
      "Workday: Search Direct Reports",
      "Confluence: Update Page"
    ],
    "conversation": [
      {
        "request": "I want an agent that can keep my team's roster page in Confluence up to date.",
        "response": "I can do that. The agent can get the latest list of your direct reports from Workday and update a Confluence page with that list. Is that the desired workflow?"
      },
      {
        "request": "Yes. I want to point it at our 'Team Roster' Confluence page, and it should automatically update the page with the current list of my direct reports from Workday.",
        "response": "Understood. The agent will: 1. Get the list of your direct reports from Workday. 2. Update the specified Confluence page with this new list. Is that correct?"
      },
      {
        "request": "Yes, that's it.",
        "response": null
      }
    ],
    "agentInstructions": "The Confluence Team Roster Updater helps you keep your team pages accurate. When you provide a Confluence page URL, it will: 1. Use a `Workday: Search Direct Reports` capability to get the current list of your team members. 2. Use a `Confluence: Update Page` capability to overwrite the content of the page with the new, accurate roster."
  },
  {
    "useCaseId": "136",
    "agentName": "ServiceNow Incident Categorizer",
    "toolSelection": [
      "ServiceNow: Search Incidents",
      "ServiceNow: Update Incident"
    ],
    "conversation": [
      {
        "request": "I need an agent to help me categorize new IT incidents.",
        "response": "I can help with that. The agent can find all new incidents that don't have a category assigned. What should it do with them?"
      },
      {
        "request": "Find all incidents created today with no category. For each one, I want it to suggest a category based on the title, and I will approve it. For example, if the title contains 'VPN', suggest 'Networking'.",
        "response": "A smart triage assistant. The agent will: 1. Find new, uncategorized incidents. 2. Analyze the title for keywords and suggest a category for your approval. 3. Once you approve, it will update the incident with the new category. Is that the plan?"
      },
      {
        "request": "Yes, that's a great workflow.",
        "response": null
      }
    ],
    "agentInstructions": "The ServiceNow Incident Categorizer helps you triage new tickets. When run, it will: 1. Use a `ServiceNow: Search Incidents` capability to find all incidents created today without a category. 2. For each incident, it will analyze the title and suggest a category to you. 3. Upon your approval, it will use `ServiceNow: Update Incident` to set the category on the ticket."
  },
  {
    "useCaseId": "137",
    "agentName": "Jira Story Point Auditor",
    "toolSelection": [
      "Jira: Search Jira Issues",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I want an agent to find stories in our backlog that are missing story points.",
        "response": "I can do that. The agent can search a specific project's backlog for any stories where the 'Story Points' field is empty. What should it do when it finds them?"
      },
      {
        "request": "It should find all unpointed stories in the 'Backend' project backlog and send a single email to the product manager with a list of the tickets that need to be estimated.",
        "response": "Okay. The agent will: 1. Search Jira for stories in the 'Backend' backlog with no story points. 2. Compile a list of these stories. 3. Email this list to the product manager for review. Is that correct?"
      },
      {
        "request": "Yes, that's it.",
        "response": null
      }
    ],
    "agentInstructions": "The Jira Story Point Auditor helps with backlog grooming. When you run it, the agent will: 1. Use `Jira: Search Jira Issues` to find all stories in a specified project's backlog that are missing story points. 2. It will then use `Gmail: Send Email` to send a consolidated list of these unestimated stories to the product manager."
  },
  {
    "useCaseId": "138",
    "agentName": "Calendar 'Focus Time' Scheduler",
    "toolSelection": [
      "Google Calendar: Search Events",
      "Google Calendar: Create Calendar Event"
    ],
    "conversation": [
      {
        "request": "I need an agent to help me schedule focus time.",
        "response": "A great way to protect your time. The agent can find open slots in your calendar and create 'Focus Time' events. How much time are you looking for?"
      },
      {
        "request": "Find four 2-hour open slots on my calendar for next week and create a 'Focus Time' event for each of them.",
        "response": "Okay. The agent will: 1. Search your Google Calendar for four available 2-hour slots next week. 2. For each slot, it will create a new event titled 'Focus Time'. Is that the plan?"
      },
      {
        "request": "Yes, please do that.",
        "response": null
      }
    ],
    "agentInstructions": "The Calendar 'Focus Time' Scheduler helps you block out time for deep work. When you ask, it will: 1. Use a `Google Calendar: Search Events` capability to find available slots of your desired duration on your calendar. 2. It will then use `Google Calendar: Create Calendar Event` to automatically schedule 'Focus Time' events in those open slots."
  },
  {
    "useCaseId": "139",
    "agentName": "Confluence Meeting Notes Creator",
    "toolSelection": [
      "Google Calendar: Search Events",
      "Confluence: Create Page"
    ],
    "conversation": [
      {
        "request": "I want an agent to create meeting notes pages for me automatically.",
        "response": "I can do that. The agent can look at your upcoming meetings and create blank Confluence pages for them. Is that what you'd like?"
      },
      {
        "request": "Yes. For all my meetings tomorrow, create a new Confluence page in the 'Meetings' space. The title of the page should be the meeting title, and it should be pre-filled with a list of the attendees.",
        "response": "A great way to stay organized. The agent will: 1. Find all your meetings on Google Calendar for tomorrow. 2. For each meeting, it will get the title and attendee list. 3. It will then create a new Confluence page with that information. Is that correct?"
      },
      {
        "request": "Yes, that's perfect.",
        "response": null
      }
    ],
    "agentInstructions": "The Confluence Meeting Notes Creator helps you prepare for meetings. When you ask, it will: 1. Use a `Google Calendar: Search Events` capability to find all of your meetings for the next day. 2. For each meeting, it will use `Confluence: Create Page` to create a new notes page, pre-populated with the meeting title and a list of attendees."
  },
  {
    "useCaseId": "140",
    "agentName": "Jira and ServiceNow Linker",
    "toolSelection": [
      "Jira: Update Jira Issue",
      "ServiceNow: Update Incident"
    ],
    "conversation": [
      {
        "request": "I need an agent that can link an existing Jira ticket to a ServiceNow incident.",
        "response": "I can do that. If you provide both the Jira issue ID and the ServiceNow incident number, I can create a bi-directional link between them. Is that what you need?"
      },
      {
        "request": "Yes. I have JIRA-123 and INC456. Add a comment to the Jira ticket with the ServiceNow number, and a comment to the ServiceNow ticket with the Jira number.",
        "response": "Okay. The agent will: 1. Add a comment to JIRA-123 that references INC456. 2. Add a comment to INC456 that references JIRA-123. Is that correct?"
      },
      {
        "request": "Yes, that's the workflow.",
        "response": null
      }
    ],
    "agentInstructions": "The Jira and ServiceNow Linker helps you connect related tickets across systems. When you provide a Jira issue ID and a ServiceNow incident number, it will: 1. Use `Jira: Update Jira Issue` to add a comment to the Jira ticket with the ServiceNow incident number. 2. Use `ServiceNow: Update Incident` to add a comment to the ServiceNow incident with the Jira issue number, creating a bi-directional link."
  },
  {
    "useCaseId": "141",
    "agentName": "Release Notes Emailer",
    "toolSelection": [
      "Confluence: Search Pages",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent to send out our release notes.",
        "response": "I can do that. The agent can find a release notes page in Confluence and email it to a distribution list. What is the title of the page?"
      },
      {
        "request": "Find the page titled 'Release Notes v4.2' in our 'Engineering' space, and send the content of that page in an email to 'product-team@example.com'.",
        "response": "Okay. The agent will: 1. Find the 'Release Notes v4.2' page in Confluence. 2. Get the content of the page. 3. Email that content to the product team. Is that correct?"
      },
      {
        "request": "Yes, that's it.",
        "response": null
      }
    ],
    "agentInstructions": "The Release Notes Emailer helps you distribute your release notes. When you provide a Confluence page title, it will: 1. Use a `Confluence: Search Pages` capability to find the page and retrieve its content. 2. Use `Gmail: Send Email` to send the content of the page to a specified distribution list."
  },
  {
    "useCaseId": "142",
    "agentName": "Jira Sprint Commitment Auditor",
    "toolSelection": [
      "Jira: Search Jira Issues",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I want an agent to check if any new work was added to the active sprint after it started.",
        "response": "That's a good way to track scope creep. The agent can find all tickets in the active sprint that were created after the sprint's start date. What should it do with this list?"
      },
      {
        "request": "It should email a list of those 'scope creep' tickets to the engineering manager.",
        "response": "Understood. The agent will: 1. Find the start date of the current sprint. 2. Search for any tickets in the sprint that were created after that date. 3. Email a list of these tickets to the engineering manager. Is that the plan?"
      },
      {
        "request": "Yes, that's the one.",
        "response": null
      }
    ],
    "agentInstructions": "The Jira Sprint Commitment Auditor helps you track scope creep. When run, it will: 1. Use `Jira: Search Jira Issues` to find the start date of the active sprint. 2. It will then use `Jira: Search Jira Issues` again to find any tickets in that sprint that were created after the sprint started. 3. Finally, it will use `Gmail: Send Email` to send a report of these 'added work' tickets to the engineering manager."
  },
  {
    "useCaseId": "143",
    "agentName": "ServiceNow Incident to Confluence Post-Mortem",
    "toolSelection": [
      "ServiceNow: Search Incidents",
      "Confluence: Create Page"
    ],
    "conversation": [
      {
        "request": "I need an agent to create a post-mortem document for a major incident.",
        "response": "I can do that. The agent can take a ServiceNow incident number and create a post-mortem page in Confluence, pre-filled with the incident's details. Is that what you need?"
      },
      {
        "request": "Yes. For incident INC789, create a new page in our 'Post-Mortems' Confluence space. The page should be titled 'Post-Mortem: INC789' and should be pre-filled with the incident's description, timeline, and resolution from ServiceNow.",
        "response": "Okay. The agent will: 1. Get all the details for INC789 from ServiceNow. 2. Create a new Confluence page using a post-mortem template, populated with the incident's details. Is that correct?"
      },
      {
        "request": "Yes, that's perfect.",
        "response": null
      }
    ],
    "agentInstructions": "The ServiceNow Incident to Confluence Post-Mortem agent helps you standardize your incident review process. When you provide a ServiceNow Incident ID, it will: 1. Use a `ServiceNow: Search Incidents` capability to retrieve all the details of that incident. 2. Use `Confluence: Create Page` to create a new post-mortem document, pre-populated with the incident's description, timeline, and resolution, ready for your team to analyze."
  },
  {
    "useCaseId": "144",
    "agentName": "Gmail Vacation Responder",
    "toolSelection": [
      "Workday: Search Leave Requests",
      "Gmail: Set Vacation Responder"
    ],
    "conversation": [
      {
        "request": "I want an agent that can set my out-of-office message in Gmail based on my approved time off in Workday.",
        "response": "That's a great idea. The agent can look up your next approved vacation in Workday and use those dates to set your vacation responder in Gmail. Is that what you'd like?"
      },
      {
        "request": "Yes. It should find my next approved vacation, and then set my Gmail OOO for those dates with a standard message.",
        "response": "Okay. The agent will: 1. Search Workday for your next approved leave request. 2. Use the dates from that request to enable your Gmail vacation responder. Is that the workflow?"
      },
      {
        "request": "Yes, that's it.",
        "response": null
      }
    ],
    "agentInstructions": "The Gmail Vacation Responder helps you automate your out-of-office settings. When you run it, it will: 1. Use a `Workday: Search Leave Requests` capability to find your next approved vacation. 2. It will then use a `Gmail: Set Vacation Responder` capability to automatically enable your out-of-office message for those specific dates."
  },
  {
    "useCaseId": "145",
    "agentName": "Jira Epic Creator from Confluence",
    "toolSelection": [
      "Confluence: Search Pages",
      "Jira: Create Jira Issue"
    ],
    "conversation": [
      {
        "request": "I need an agent that can turn a project plan in Confluence into epics in Jira.",
        "response": "I can do that. If you have a Confluence page with a list of epics, the agent can read that page and create the epics in Jira for you. Does that sound right?"
      },
      {
        "request": "Yes. I have a 'Project Apollo Plan' page. The agent should find every H2 heading on that page and create a new epic in the 'APOLLO' Jira project for each one.",
        "response": "A very efficient way to plan. The agent will: 1. Get the content of the 'Project Apollo Plan' page. 2. Extract all H2 headings. 3. For each heading, create a new epic in the 'APOLLO' project. Is that correct?"
      },
      {
        "request": "Yes, that's the process.",
        "response": null
      }
    ],
    "agentInstructions": "The Jira Epic Creator from Confluence helps you turn plans into action. When you provide a Confluence page URL, it will: 1. Use a `Confluence: Search Pages` capability to read the page content. 2. It will parse the content to find all H2 headings. 3. For each heading, it will use `Jira: Create Jira Issue` to create a new epic in a specified Jira project."
  },
  {
    "useCaseId": "146",
    "agentName": "Calendar Interview Packager",
    "toolSelection": [
      "Google Calendar: Search Events",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent to help me prepare for an interview I'm conducting.",
        "response": "I can help with that. The agent can find the interview on your calendar and then gather relevant information for you. What information would be helpful?"
      },
      {
        "request": "Find the 'Candidate X Interview' on my calendar for tomorrow. Then, find the email thread with the recruiter about this candidate and email me a link to that thread.",
        "response": "Okay. The agent will: 1. Find the 'Candidate X Interview' on your calendar. 2. Search your Gmail for emails with the candidate's name and the recruiter's name. 3. Email you a link to the most relevant email thread it finds. Is that correct?"
      },
      {
        "request": "Yes, that would be very helpful.",
        "response": null
      }
    ],
    "agentInstructions": "The Calendar Interview Packager helps you prepare for interviews. When you provide a meeting title, it will: 1. Use a `Google Calendar: Search Events` capability to find the interview details. 2. Use a `Gmail: Search Emails` capability to find the related email thread with the recruiter. 3. Use `Gmail: Send Email` to send you a 'prep package' email containing a link to the relevant email thread."
  },
  {
    "useCaseId": "147",
    "agentName": "Jira Bug Duplicate Finder",
    "toolSelection": [
      "Jira: Search Jira Issues",
      "Jira: Update Jira Issue"
    ],
    "conversation": [
      {
        "request": "I want an agent that can help me find and link duplicate bugs.",
        "response": "I can do that. If you provide two Jira issue IDs, the agent can link them as duplicates. Is that what you need?"
      },
      {
        "request": "Yes. I have two tickets, PROJ-555 and PROJ-567, that are duplicates. Please link them and close the newer one, PROJ-567.",
        "response": "Understood. The agent will: 1. Link PROJ-555 and PROJ-567 as duplicates. 2. Add a comment to PROJ-567 saying it's a duplicate of PROJ-555. 3. Change the status of PROJ-567 to 'Closed'. Is that the correct workflow?"
      },
      {
        "request": "Yes, that's it.",
        "response": null
      }
    ],
    "agentInstructions": "The Jira Bug Duplicate Finder helps you clean up your backlog. When you provide two issue IDs, it will: 1. Use `Jira: Update Jira Issue` to link the two tickets as duplicates. 2. It will then use `Jira: Update Jira Issue` again to add a comment and change the status of the newer ticket to 'Closed'."
  },
  {
    "useCaseId": "148",
    "agentName": "ServiceNow Bulk Incident Assigner",
    "toolSelection": [
      "ServiceNow: Search Incidents",
      "ServiceNow: Update Incident"
    ],
    "conversation": [
      {
        "request": "I need an agent to help me assign a batch of related incidents.",
        "response": "I can do that. The agent can find all incidents matching a certain criteria and assign them to a specific person. What is the criteria?"
      },
      {
        "request": "Find all unassigned incidents in the 'Database' category that were created in the last 24 hours, and assign them all to 'dba-oncall@example.com'.",
        "response": "Okay. The agent will: 1. Search ServiceNow for all unassigned incidents in the 'Database' category from the last 24 hours. 2. For each incident found, it will assign it to 'dba-oncall@example.com'. Is that correct?"
      },
      {
        "request": "Yes, that's the process.",
        "response": null
      }
    ],
    "agentInstructions": "The ServiceNow Bulk Incident Assigner helps you triage incidents quickly. When you provide a category and an assignee, it will: 1. Use a `ServiceNow: Search Incidents` capability to find all unassigned incidents in that category. 2. It will then loop through the results and use `ServiceNow: Update Incident` to assign each one to the specified person or group."
  },
  {
    "useCaseId": "149",
    "agentName": "Confluence Project Hub Creator",
    "toolSelection": [
      "Jira: Search Jira Issues",
      "Confluence: Create Page"
    ],
    "conversation": [
      {
        "request": "I want an agent that can create a central hub page for a new project in Confluence.",
        "response": "I can do that. The agent can create a page and link to key resources. What resources should it link to?"
      },
      {
        "request": "For the 'Helios' project in Jira, create a new page in Confluence. The page should have the project name as the title, and the content should be a list of all epics and a list of all team members in the project.",
        "response": "A great way to centralize project info. The agent will: 1. Get all epics and team members for the 'Helios' project from Jira. 2. Create a new Confluence page with this information. Is that correct?"
      },
      {
        "request": "Yes, that's it.",
        "response": null
      }
    ],
    "agentInstructions": "The Confluence Project Hub Creator helps you quickly set up new project spaces. When you provide a Jira project key, it will: 1. Use `Jira: Search Jira Issues` to get a list of all epics and team members for that project. 2. Use `Confluence: Create Page` to generate a new hub page, pre-populated with links to the epics and a list of the team members."
  },
  {
    "useCaseId": "150",
    "agentName": "Gmail Follow-up Scheduler",
    "toolSelection": [
      "Gmail: Search Emails",
      "Google Calendar: Create Calendar Event"
    ],
    "conversation": [
      {
        "request": "I need an agent to help me remember to follow up on important emails.",
        "response": "I can help with that. If you give me an email to watch, I can schedule a follow-up reminder for you. What's the email?"
      },
      {
        "request": "Find the email I sent to 'client@example.com' yesterday with the subject 'Project Proposal'. If I haven't received a reply, schedule a 'Follow Up' event on my calendar for 3 days from now.",
        "response": "Okay. The agent will: 1. Search your Gmail to see if there is a reply to that specific email thread. 2. If there is no reply, it will create a 'Follow Up' event on your Google Calendar. Is that the correct logic?"
      },
      {
        "request": "Yes, that's perfect.",
        "response": null
      }
    ],
    "agentInstructions": "The Gmail Follow-up Scheduler ensures you never drop the ball. When you identify an important email, tell the agent. It will: 1. Use a `Gmail: Search Emails` capability to check if a reply has been received for that conversation. 2. If no reply is found, it will use `Google Calendar: Create Calendar Event` to schedule a 'Follow Up' reminder on your calendar for a future date."
  },
  {
    "useCaseId": "151",
    "agentName": "Jira Component Lead Notifier",
    "toolSelection": [
      "Jira: Search Jira Issues",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I need an agent to notify component leads about new high-priority bugs in their area.",
        "response": "I can do that. The agent can find new P0 bugs and email the appropriate component lead. Should it search for bugs created in the last 24 hours?"
      },
      {
        "request": "Yes. Find all P0 bugs created in the last 24 hours. For each bug, identify its component, find the lead for that component, and send them a notification email.",
        "response": "A great way to ensure accountability. The agent will: 1. Find new P0 bugs. 2. For each, get the component and its lead. 3. Email the lead with a link to the new high-priority bug. Is that correct?"
      },
      {
        "request": "Yes, that's the workflow.",
        "response": null
      }
    ],
    "agentInstructions": "The Jira Component Lead Notifier ensures urgent bugs are seen by the right people. When run, it will: 1. Use `Jira: Search Jira Issues` to find all P0 bugs created in the last 24 hours. 2. For each bug, it will identify the component lead. 3. It will then use `Gmail: Send Email` to send a high-priority notification directly to that lead."
  },
  {
    "useCaseId": "152",
    "agentName": "Workday Time-Off Conflict Checker",
    "toolSelection": [
      "Workday: Search Leave Requests",
      "Google Calendar: Search Events",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I want an agent to check if my approved time off in Workday conflicts with any important meetings on my calendar.",
        "response": "I can do that. The agent can find your approved leave and then check your calendar for conflicts. What would you consider an 'important' meeting?"
      },
      {
        "request": "Any meeting with my manager or any meeting with more than 10 people. It should find my next approved vacation, check for those conflicts, and email me a list of the meetings I need to reschedule.",
        "response": "Okay. The agent will: 1. Find your next approved vacation in Workday. 2. Search your Google Calendar during those dates for meetings with your manager or >10 attendees. 3. Email you a list of any conflicting meetings. Is that correct?"
      },
      {
        "request": "Yes, that's a huge help.",
        "response": null
      }
    ],
    "agentInstructions": "The Workday Time-Off Conflict Checker helps you prepare for your vacation. When you run it, it will: 1. Use a `Workday: Search Leave Requests` capability to find your next approved time off. 2. Use a `Google Calendar: Search Events` capability to find any important meetings (e.g., with your manager or large groups) that conflict with your leave. 3. Use `Gmail: Send Email` to send you a list of the meetings you need to reschedule."
  },
  {
    "useCaseId": "153",
    "agentName": "On-Call Schedule Publisher",
    "toolSelection": [
      "PagerDuty: Get On-Call Schedule",
      "Confluence: Create Page"
    ],
    "conversation": [
      {
        "request": "I need an agent to publish our on-call schedule.",
        "response": "I can do that. The agent can get the on-call schedule from a service like PagerDuty and post it to a Confluence page. Is that what you need?"
      },
      {
        "request": "Yes. Get the on-call schedule for the 'Tier-2-Support' team for next week from PagerDuty and create a new Confluence page with that schedule.",
        "response": "Okay. The agent will: 1. Get the on-call schedule for 'Tier-2-Support' for next week. 2. Create a new Confluence page titled 'On-Call Schedule: Next Week' with the details. Is that correct?"
      },
      {
        "request": "Yes, that's it.",
        "response": null
      }
    ],
    "agentInstructions": "The On-Call Schedule Publisher helps you communicate your team's on-call rotation. When you run it, it will: 1. Use a `PagerDuty: Get On-Call Schedule` capability to retrieve the schedule for a specified team and date range. 2. Use `Confluence: Create Page` to publish this schedule to a central and easily accessible page for the rest of the organization."
  },
  {
    "useCaseId": "154",
    "agentName": "Jira Sprint Health Checker",
    "toolSelection": [
      "Jira: Search Jira Issues",
      "Gmail: Send Email"
    ],
    "conversation": [
      {
        "request": "I want an agent to give me a daily health check of our current sprint.",
        "response": "I can do that. The agent can check for things like new bugs or tickets that are blocked. What should it look for?"
      },
      {
        "request": "Every morning, it should find any new bugs added to the active sprint in the last 24 hours, and any tickets that are currently blocked. It should then email a summary of these 'at-risk' items to the scrum master.",
        "response": "A great way to start the day. The agent will: 1. Search the active sprint for new bugs and blocked tickets. 2. Compile a list of these items. 3. Email the summary to the scrum master. Is that correct?"
      },
      {
        "request": "Yes, that's the workflow.",
        "response": null
      }
    ],
    "agentInstructions": "The Jira Sprint Health Checker helps you stay on top of your sprint. When run, it will: 1. Use `Jira: Search Jira Issues` to find any new bugs added to the active sprint in the last 24 hours and any tickets currently marked as 'Blocked'. 2. It will then use `Gmail: Send Email` to send a daily digest of these potential risk items to the scrum master."
  },
  {
    "useCaseId": "155",
    "agentName": "ServiceNow Incident Tagger",
    "toolSelection": [
      "ServiceNow: Search Incidents",
      "ServiceNow: Update Incident"
    ],
    "conversation": [
      {
        "request": "I need an agent to help me tag incidents based on keywords.",
        "response": "I can do that. The agent can search for incidents with certain keywords in their description and then apply a tag. What's the rule?"
      },
      {
        "request": "Find all incidents created in the last hour that contain the word 'outage'. For each one, add the 'major-incident' tag to it.",
        "response": "Okay. The agent will: 1. Search for new incidents containing the word 'outage'. 2. For each incident found, it will add the 'major-incident' tag. Is that correct?"
      },
      {
        "request": "Yes, that's it.",
        "response": null
      }
    ],
    "agentInstructions": "The ServiceNow Incident Tagger helps you automatically categorize incidents. When you provide a keyword and a tag, it will: 1. Use a `ServiceNow: Search Incidents` capability to find all recent incidents containing that keyword. 2. For each incident, it will use `ServiceNow: Update Incident` to apply the specified tag, helping with routing and reporting."
  },
  {
    "useCaseId": "156",
    "agentName": "Team Meeting Scheduler",
    "toolSelection": [
      "Jira: Search Jira Issues",
      "Google Calendar: Create Calendar Event"
    ],
    "conversation": [
      {
        "request": "I need to schedule a kick-off meeting for a new project.",
        "response": "I can help with that. How should the agent determine who to invite?"
      },
      {
        "request": "Find all the members of the 'Orion' project in Jira and schedule a 1-hour 'Project Orion Kick-off' meeting with all of them for the first available time slot next week.",
        "response": "Okay. The agent will: 1. Get the list of all members in the 'Orion' Jira project. 2. Search their calendars for a 1-hour slot next week. 3. Create a calendar event and invite everyone. Is that correct?"
      },
      {
        "request": "Yes, that's the plan.",
        "response": null
      }
    ],
    "agentInstructions": "The Team Meeting Scheduler helps you schedule project meetings. When you provide a Jira project key, it will: 1. Use `Jira: Search Jira Issues` to get a list of all project members. 2. Use a `Google Calendar: Search Events` capability to find a common available time slot. 3. Use `Google Calendar: Create Calendar Event` to schedule the meeting and invite all project members."
  },
  {
    "useCaseId": "157",
    "agentName": "Confluence Page Archiver",
    "toolSelection": [
      "Confluence: Search Pages",
      "Confluence: Archive Page"
    ],
    "conversation": [
      {
        "request": "I want an agent to help me archive old project pages in Confluence.",
        "response": "I can do that. How should the agent identify which projects are old?"
      },
      {
        "request": "Find all pages in the 'Projects' space that have the word 'Archive' in the title, but haven't been updated in 6 months. For each one it finds, it should archive the page.",
        "response": "A good cleanup rule. The agent will: 1. Search for pages in the 'Projects' space with 'Archive' in the title and no updates in 6 months. 2. For each page, it will use the archive function. Is that correct?"
      },
      {
        "request": "Yes, that's it.",
        "response": null
      }
    ],
    "agentInstructions": "The Confluence Page Archiver helps you keep your Confluence space tidy. When run, it will: 1. Use a `Confluence: Search Pages` capability to find pages with 'Archive' in the title that haven't been updated in 180 days. 2. For each page, it will use a `Confluence: Archive Page` capability to archive it."
  },
  {
    "useCaseId": "158",
    "agentName": "Gmail Large Attachment Finder",
    "toolSelection": [
      "Gmail: Search Emails",
      "Jira: Create Jira Issue"
    ],
    "conversation": [
      {
        "request": "I need an agent to help me find large attachments in my email that I need to follow up on.",
        "response": "I can do that. The agent can search for emails with large attachments. What should it do when it finds them?"
      },
      {
        "request": "Find all emails I've received in the last week with attachments larger than 10MB. For each one, create a Jira task for me to 'Review Large Attachment' and include the email subject in the task description.",
        "response": "Okay. The agent will: 1. Search your Gmail for emails with attachments >10MB from the last week. 2. For each, it will create a Jira task for you to review it. Is that the workflow?"
      },
      {
        "request": "Yes, that's perfect.",
        "response": null
      }
    ],
    "agentInstructions": "The Gmail Large Attachment Finder helps you manage your inbox. When run, it will: 1. Use a `Gmail: Search Emails` capability to find all emails from the last 7 days with attachments larger than 10MB. 2. For each email found, it will use `Jira: Create Jira Issue` to create a task assigned to you, reminding you to review the large attachment."
  },
  {
    "useCaseId": "159",
    "agentName": "ServiceNow Incident Duplicator",
    "toolSelection": [
      "ServiceNow: Search Incidents",
      "ServiceNow: Create Incident"
    ],
    "conversation": [
      {
        "request": "I need an agent that can duplicate a ServiceNow incident for a different team.",
        "response": "I can do that. If you provide a ServiceNow incident ID, the agent can copy its details and create a new incident. Is that what you need?"
      },
      {
        "request": "Yes. Take incident INC123, and create a new incident with the same title and description, but assign it to the 'Networking' team.",
        "response": "Okay. The agent will: 1. Get the details of INC123. 2. Create a new incident with the same details but a different assignment group. Is that correct?"
      },
      {
        "request": "Yes, that's it.",
        "response": null
      }
    ],
    "agentInstructions": "The ServiceNow Incident Duplicator helps you re-assign issues to different teams. When you provide an incident ID and a new assignment group, it will: 1. Use a `ServiceNow: Search Incidents` capability to get the details of the original incident. 2. Use `ServiceNow: Create Incident` to create a new incident with the same title and description, but assigned to the new team."
  },
  {
    "useCaseId": "160",
    "agentName": "Jira Epic Status Updater",
    "toolSelection": [
      "Jira: Search Jira Issues",
      "Jira: Update Jira Issue"
    ],
    "conversation": [
      {
        "request": "I want an agent that can automatically close an epic when all its stories are done.",
        "response": "I can do that. The agent can check an epic, and if all its child stories are 'Done', it can close the epic itself. Is that the logic you want?"
      },
      {
        "request": "Yes. For the epic PROJ-100, check if all its stories are closed. If they are, add a comment 'All stories complete.' to the epic and then close it.",
        "response": "Understood. The agent will: 1. Find all stories in epic PROJ-100. 2. Check if they are all in a 'Done' or 'Closed' state. 3. If so, it will comment on and close the parent epic. Is that correct?"
      },
      {
        "request": "Yes, that's the workflow.",
        "response": null
      }
    ],
    "agentInstructions": "The Jira Epic Status Updater helps you automate your workflow. When you provide an Epic ID, it will: 1. Use `Jira: Search Jira Issues` to get the status of all child stories. 2. If all stories are complete, it will use `Jira: Update Jira Issue` to add a concluding comment and change the epic's status to 'Done'."
  }
]
